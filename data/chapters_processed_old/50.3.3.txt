50.3.3 Ereignisse (Events)

Viele Applikationen, insbesondere solche mit GUI, benötigen neben der direkten Kommunikation zwischen Objekten, die sich kennen (die ja durch Nachrichtenaustausch bzw., je nach Diktion, durch Methodenaufrufe bewerkstelligt wird), auch eine Kommunikation mit unbekannten. Die Problematik hatten wir im Kontext von SMALLTALK bereits besprochen (Abschnitt 14.3 in Kurseinheit 1).
Nun kommt dieses Problem so häufig vor, dass sich MICROSOFT dafür entschieden hat, es zumindest teilweise von der Ebene der Programmierung (wo es in Form eines sog. Patterns abgehandelt wird; mehr dazu in Kurs 01853) auf die Ebene der Programmiersprache zu heben (in SMALLTALK, wo diese Unterscheidung nicht so ausgeprägt ist, war das Problem ja mittels einer Implementierung der benötigten Mechanismen in der Klasse Object gelöst worden, von der alle anderen erben).
Zu diesem Zweck wurde das Konstrukt des Events (Ereignisses) eingeführt, über das sog. Event handler aktiviert werden können. Dabei handelt es sich um die in Abschnitt 50.4.1 skizzierten sog. Delegates. Leider ist die Syntax von C-Sharp, die mit Deklaration und Registrierung von Eventhandlern sowie der Verbreitung von Ereignissen verbunden ist, nach Ansicht des Autors dieses Textes komplett unleserlich geraten, so dass hier auf eine weitergehende Befassung mit dem Thema verzichtet wird.

Frage: Warum benötigen viele Applikationen, insbesondere solche mit GUI, eine Kommunikation mit unbekannten Objekten?
Antwort: Viele Applikationen benötigen eine Kommunikation mit unbekannten Objekten, da sie neben der direkten Kommunikation zwischen Objekten, die sich kennen, auch mit anderen Objekten kommunizieren müssen, die nicht im Voraus bekannt sind. Dies tritt insbesondere in Anwendungen mit grafischer Benutzeroberfläche (GUI) auf, wo verschiedene Elemente miteinander interagieren müssen, ohne im Voraus genau zu wissen, welche Objekte diese Interaktion benötigen.

Frage: Wie hat Microsoft versucht, das Problem der Kommunikation mit unbekannten Objekten auf der Ebene der Programmiersprache zu lösen?
Antwort: Microsoft hat versucht, das Problem der Kommunikation mit unbekannten Objekten teilweise von der Ebene der Programmierung auf die Ebene der Programmiersprache zu heben, indem sie das Konstrukt des Events (Ereignisses) eingeführt haben. Über Ereignisse können sogenannte Eventhandler aktiviert werden, die auf unerwartete Ereignisse reagieren können. Dies wurde mithilfe von Delegates realisiert, wie im Abschnitt 50.4.1 skizziert.

Frage: Warum bezeichnet der Autor die Syntax von C-Sharp im Zusammenhang mit Events als "komplett unleserlich"?
Antwort: Der Autor bezeichnet die Syntax von C-Sharp im Zusammenhang mit Events als "komplett unleserlich", weil er sie als schwer verständlich oder verwirrend empfindet. Dies kann auf die Art und Weise zurückzuführen sein, wie Events deklariert, Eventhandler registriert und Ereignisse behandelt werden, was möglicherweise die Lesbarkeit des Codes beeinträchtigt.