4.3.3 Methoden als Parameter
Nun wurde eingangs die ses Kapitel s vom Mysterium des Nachrichtenver-
sands gesprochen. Tatsächlich ist aber zumindest in SMALLTALK seine Re-
alisierung in Form von Methodenaufrufen nur ein Zugeständnis an die
Ausführungseffizienz. Und so sind denn auch in SMALLTALK Nachrichten (ode r vielmehr
Nachrichtenselektoren) auch Objekte — schließlich soll dort ja alles ein Objekt sein. Um
tatsächlich als Nachrichtenobjekt an ein Objekt verschickt zu werden, muss man sich aber
einer speziellen Methode (genauer: eines speziellen Methodenaufrufs ), perform: , bedie-
nen, der es erlaubt, einem Empfängerobjekt eine Nachricht als Objekt (wenn auch nur als
Parameter von perform: ) zu senden. Das Empfängerobjekt reagiert darauf mit der Abar-
beitung der zur Nachricht passenden Methode ganz so, als hätte es d irekt einen entspre-
chenden Methodenaufruf erhalten. So wertet zum Beispiel
111 nil perform: #isNil
genau wie
112 nil isNil
zu true aus. Der Nachrichtenselektor ist immer ein Symbol ( #isNil im gegebenen Beispiel)
und darf beim „Versand“ mittels perform: , anders als beim direkten Aufruf, auch in einer
Variable gespeichert sein. Bei binären und höherstelligen Nachrichten braucht man zusätz-
lich noch die Argumente (Parameter) zum Nachrichtenselektor; sie können durch Erweite-
rung von perform: zu perform:with: , perform:wi th:with: usw. angehängt wer-
den. So ist dann beispielsweise der Ausdruck
113 1 perform: #+ with: 2
äquivalent zu 1 + 2 . … und es gibt ihn
doch, den
Nachrichtenversand
