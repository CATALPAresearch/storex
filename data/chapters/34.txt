34 Das Programmiermodell JAVAs
JAVA ist in vielerlei Hinsicht (und vor allem im Vergleich zu SMALLTALK ) eine konventionelle
Programmiersprache. Programme werden als Quelltext in sog. Compilation units gespei-
chert, die gewöhnlich Dateien sind und die — jede für sich — immer als Ganzes übersetzt
werden .57 Das Ergebnis der Übersetzung ist jedoch kein direkt ausführbarer Maschinen-
code, sondern ein sog. Bytecode , der von einer virtuellen Maschine, der Java Virtual Machine
(JVM), interpretiert we rden muss . Das sonst übliche Linken der einzelnen Klassen (genauer:
des zu den Klassen gehörenden Bytecodes, die sog. Class files ) wird dabei durch das Class
57 Die Entwicklungsumgebung VISUALAGE FOR JAVA, die Vorgänger in von ECLIPSE , machte hier eine
Ausnahme und sah — wie Smalltalk — die Speicherung von Klassen in einem Image vor. Eclipse hat
übrigens bis heute eine Java Browsing Perspective, die d em System Browser von Smalltalk ähnelt.
JAVA als Kind von
SMALLTALK und C++
loading der JVM ersetzt. Vorteile des ganzen sind eine größere Flexibilität bei der Entwick-
lung und Verteilung von Anwendungen sowie eine weitgehende Plattformunabhängigkeit:
JAVA-Programme können, soweit sie nicht von bestimmten Eigenheiten der Betriebssysteme
abhängen (man denke z. B. an die unterschiedliche Handhabung von Groß -/Klein schrei -
bung — JAVA ist case sensitive, Windows nicht! ), auf jedem Rechner und Betriebssystem
laufen, für die es eine JVM gibt.
Während JAVA als Programmiersprache anfangs noch recht klein und
überschaubar war (zumindest im Vergleich zu C++, einem ihrer Haupt-
konkurrenten), so ist die Sprachdefinition heute ein Moloch . Mit dem wachsenden Nutzer-
innenkreis sind auch die Anforderungen an die Sprache gewachsen, und mit dem JAVA
Community Process wurde aktiven Entwicklerinnen die Möglichkeit eingeräumt, Vorsch läge
zur Spracherweiterung zu machen. Dabei ist jedoch — aufgrund der mittlerweile riesigen
Menge an Software, die in JAVA geschrieben ist — stets auf Rückwärtskompatibilität zu
achten, so dass revolutionäre Verbesserungen kaum möglich sind; stattdessen wird hinzu-
gefügt. Das unterliegende Programmiermodell ist so immer dasselbe geblieben — und wird
es wohl auch immer bleiben.
Die grundlegenden Werkzeuge der JAVA-Programmierung sind neben
dem Editor der JAVA-Compiler javac , die JVM, die JAVA-Klassenbiblio-
thek (das sog. Application Programming Interface , API) und natürlich die
Dokumentation (API -Dokumentation und Sprachdefinition). Gerade für die JAVA-Program-
mierung gibt es jedoch zahlreiche integrierte Entwicklungsumgebungen (IDEs) und es ist
niemandem zu raten, diese Werkzeuge links liegen zu lassen — die einmal einen Teil ihrer
wertvollen Lebenszeit mit dem richtigen Setzen des sog. Class path verbracht hat, wissen ,
wovon ich rede. Auf der anderen Seite sind diese IDEs sehr komplex und erschlagen gerade
Anfängerinnen mit ihrem Funktionsumfang. Das ist auch der Grund, warum in diesem Kurs
keine JAVA-Installation von Ihnen verlangt wird — wer es aber wissen und wer mit JAVA
experimentieren möchte, die will ich keinesfalls davon abhalten.
Um ein JAVA-Programm, bestehend aus einer Menge von Class files, aus-
zuführen, muss man eine Klasse ange ben, die eine Startmethode besitzt.
Diese Startmethode heißt immer gleich; ihre Signatur hat die leicht zu merkende und immer
wieder gern eingetippte Form
982 public static void main(String[] args)
Dabei ist main der Name der Methode; was die anderen Elemente bedeuten, werden Sie
im Laufe dieser Kurseinheit noch lernen. Auf Betriebssystemebene übergibt man dann ein-
fach der JVM bei ihrem Aufruf den Namen der Klasse als Parameter, beispielsweise mit
983 java MeineTollsteKlasseBisher
Klassen werden in JAVA wie in SMALLTALK per Konvention immer großgeschrieben. rückwärtskompatible
Weiterentwicklung
wichtige Werkzeuge
der JAVA-
Programmierung
Ausführung eines
JAVA-Programms
Ein letztes, wichtiges Merkmal des Programmiermodells von JAVA ist die
Art des Deployment, also wie in JAVA programmierte Anwendungen in die Anwendung
gehen. Während früher alle namhaften Web -Browser ( per Plug -in) den Start von in Websei-
ten eingebetteten JAVA-Anwendungen erlaubten , bleibt heute praktisch nur noch die Ver-
teilung per sog. JAVA Archive (einer .jar -Datei). Zu deren Ausführung ist jedoch eine Instal-
lation der JVM vonnöten.
