8.3 Factory-Methoden

In SMALLTALK sind Konstruktoren ganz normale Klassenmethoden und daher an keine besonderen Konventionen gebunden. Insbesondere müssen sie nicht zwingend ein neues Objekt genau der Klasse zurückgeben, zu der sie gehören. Dies ermöglicht die Verwendung sogenannter Factory-Methoden.
Eine Factory-Methode ist eine Methode, die ähnlich wie ein Konstruktor eine neue Instanz liefert. Allerdings macht sie die Klasse der Instanz von anderen Faktoren als nur der Klasse, zu der die Methode gehört, abhängig. Zum Beispiel könnte eine Klasse "Number" eine Klassenmethode "fromString:" bereitstellen, die anhand eines zu analysierenden Strings entweder eine Instanz der Klasse "Integer" oder eine Instanz der Klasse "Float" zurückgibt. Die Implementierung solcher Factory-Methoden ist in SMALLTALK einfach möglich und sie unterscheiden sich formal nicht von Konstruktoren – es handelt sich einfach um Klassenmethoden.
Diese Factory-Methode "fromString:" in der Klasse "Number" analysiert den übergebenen String. Wenn der Parameter "aString" einen Dezimalpunkt enthält, wird eine neue Fließkommazahl zurückgegeben (mittels der Methode "asFloat", die in der Klasse "String" implementiert ist und eine Instanz der Klasse "Float" zurückliefert). Andernfalls wird eine Ganzzahl zurückgegeben.
Diese Art von Factory-Methoden ermöglicht eine flexible Instanziierung von Objekten abhängig von den gegebenen Eingaben.

Frage: Was sind Factory-Methoden in SMALLTALK?
Antwort: Factory-Methoden in SMALLTALK sind spezielle Klassenmethoden, die ähnlich wie Konstruktoren neue Instanzen erstellen. Allerdings können sie die Klasse der Instanz basierend auf anderen Faktoren als nur der Klasse, zu der die Methode gehört, festlegen.

Frage: Wie unterscheiden sich Factory-Methoden formal von Konstruktoren in SMALLTALK?
Antwort: Formal unterscheiden sich Factory-Methoden in SMALLTALK nicht von Konstruktoren; sie sind ebenfalls Klassenmethoden. Der Unterschied besteht darin, dass Factory-Methoden die Klasse der Instanz basierend auf anderen Faktoren festlegen können, während Konstruktoren normalerweise Instanzen derselben Klasse erstellen.