9.2 Spezialisierung

Ähnlich wie bei der Klassifikation kann man das Prinzip der Generalisierung umkehren. Man spricht dann von der Spezialisierung. Während die Generalisierung Eigenschaften weglässt oder generalisiert (Abstraktion), fügt die Spezialisierung Eigenschaften hinzu oder spezialisiert bereits vorhandene. Man kann also von jeder Klasse sagen, dass sie eine Spezialisierung ihrer Generalisierungen ist (sofern sie welche hat).
Dass eine Generalisierung bereits über Spezialisierungen verfügt, hindert eine Klasse nicht daran, neue hinzuzufügen. So ist es beispielsweise im obigen Beispiel von "Zweibeiner" denkbar, dass man im Nachhinein noch "Menschenaffe" als Spezialisierung ergänzt. Als Unterscheidungsmerkmal könnte z. B. eine Methode "klettern" dienen, die Mensch und Vogel fehlt. Sie zu ergänzen stellt überhaupt kein Problem dar - ja, es ist sogar eine der größten Errungenschaften der objektorientierten Programmierung, dass solche Programmiererweiterungen modular, also ohne andere Teile des Programms zu beeinflussen, immer möglich sind. Mehr dazu in Kapitel 26 in Kurseinheit 3.
Leider ist es in der Programmierpraxis nicht immer ganz so einfach. Oftmals findet man Klassen (bzw. Instanzen), die ungefähr das tun, was man möchte, und denen man nur noch ein wenig hinzufügen möchte. Man möchte dann von einer Klasse spezialisieren, die selbst keine Generalisierung im oben genannten Sinne ist.
Ähnlich wie bei der Generalisierung ist es bei der Spezialisierung auch möglich, dies ohne das Hinzufügen von Eigenschaften zu erreichen, nämlich durch das Beschränken von Eigenschaften. So kann z. B. bei der Spezialisierung von "Säugetier" zu "Zweibeiner" der Wertebereich der Instanzvariable "anzahlBeine" von {2, 4} (also entweder zwei oder vier) auf {2} (also nur noch zwei) eingeschränkt werden. Die sprachlichen Möglichkeiten, dies auf Klassendefinitionsebene auszudrücken, sind allerdings in SMALLTALK (wie bereits im Zusammenhang mit der Generalisierung erwähnt) nicht gegeben; diese kommen erst mit der Typisierung von Variablen (Kapitel 18 in Kurseinheit 3). Die Beschränkung des Wertebereichs durch Spezialisierung ist jedoch in jedem Fall von der Instanziierung zu unterscheiden, bei der (gegebenenfalls durch Initialisierung) einer Instanzvariable eines Objekts ein Element aus dem Wertebereich (wie z. B. 2) zugewiesen wird. Dass im Fall von "Zweibeiner" dafür nur noch ein Element als Wert in Frage kommt, spielt dabei keine Rolle.
Vollkommen unvereinbar mit der Spezialisierung ist übrigens das Entfernen von Instanzvariablen oder Methoden. Dies ergibt sich schon daraus, dass die Umkehrung der Spezialisierung, die Generalisierung, dann nicht aus dem bloßen Weglassen entstehen könnte. Die Richtung von Spezialisierung und Generalisierung würde zudem, wenn in beide Richtungen nach Belieben hinzugefügt und entfernt werden dürfte, beliebig werden.

Frage: Was ist Spezialisierung in Bezug auf die objektorientierte Programmierung?
Antwort: Spezialisierung ist das Gegenteil von Generalisierung in der objektorientierten Programmierung. Während bei der Generalisierung Eigenschaften weggelassen oder verallgemeinert werden, fügt die Spezialisierung Eigenschaften hinzu oder spezialisiert bereits vorhandene Eigenschaften von Klassen. Es bedeutet, dass eine Klasse eine Spezialisierung ihrer Generalisierungen sein kann, wenn sie zusätzliche Merkmale oder Verhaltensweisen hinzufügt.

Frage: Warum ist die Spezialisierung in der objektorientierten Programmierung wichtig?
Antwort: Spezialisierung ermöglicht es, bestehende Klassen um spezifische Eigenschaften oder Verhaltensweisen zu erweitern, ohne andere Teile des Programms zu beeinflussen. Dies fördert die Modularität und die Möglichkeit zur Erweiterung von Klassen, was eine der Stärken der objektorientierten Programmierung ist.

Frage: Gibt es Einschränkungen bei der Spezialisierung von Klassen?
Antwort: Ja, es gibt Einschränkungen bei der Spezialisierung von Klassen. Das Entfernen von Instanzvariablen oder Methoden ist vollkommen unvereinbar mit der Spezialisierung, da dies die Umkehrung der Spezialisierung, die Generalisierung, verhindern würde. Es ist jedoch möglich, Eigenschaften durch Beschränkungen zu ändern oder hinzuzufügen, aber das Entfernen ist nicht erlaubt.

Frage: Wie kann man das Problem der Spezialisierung von Klassen elegant lösen?
Antwort: Das Problem der Spezialisierung von Klassen kann elegant gelöst werden, indem parallel zur spezialisierten Klasse eine Klasse "NichtSpezialisierteKlasse" eingeführt wird. Alle Eigenschaften, die andere Instanzen von derselben Generalisierung unterscheiden, können in der "NichtSpezialisierteKlasse" platziert werden. Dadurch bleibt die Hierarchie sauber und ermöglicht eine klare Unterscheidung zwischen spezialisierten und nicht spezialisierten Klassen.