51.3 Friends

Ein interessantes Konzept von C++, das einen direkten Bezug zur objektorientierten Programmierung hat, ist das Friends-Konzept. In der Praxis kommt es häufig vor, dass ein bestimmtes Teilproblem nicht von einer Klasse allein, sondern nur durch das Zusammenwirken mehrerer Klassen gelöst werden kann. Während diese Klassen untereinander eng kooperieren müssen und deshalb (relativ) intime Kenntnis voneinander benötigen (das heißt, auf Elemente zugreifen können müssen, die anderen Klassen verborgen bleiben sollen), gilt das für andere Klassen nicht unbedingt. Die Schnittstelle solcher kooperierenden Klassen sollte also nicht absolut, sondern relativ zu anderen Klassen definierbar sein.
In JAVA hatte man dazu bis zur Version 8 nur die Möglichkeit, die besagten Klassen in ein Paket zu verfrachten und die fraglichen Elemente mit paketweitem Zugriff (also ohne Zugriffsmodifizierer) zu deklarieren (Abschnitt 39.1 in Kurseinheit 4). Das hat jedoch den Nachteil, dass alle Klassen desselben Pakets dieselbe Schnittstelle jeder einzelnen enthaltenen Klasse haben; wenn es eine Klasse gibt, die eine ansonsten unsichtbare Eigenschaft x einer Klasse A sehen und eine andere, die eine Eigenschaft y derselben Klasse sehen soll, dann gibt es keine Aufteilung der Klassen auf Pakete, die genau dieses gestattet. Was man stattdessen gern hätte, ist ein dedizierter Export von Elementen einer Klasse, also ein zur Verfügung Stellen von Elementen an genau benannte Klassen. Dies bietet, in etwas gröberer Form, das Friends-Konzept von C++: Die Definition friend class B; friend class C; bewirkt, dass (Instanzen von) B und (von) C auf alle privat deklarierten Elemente von (Instanzen von) A zugreifen können (jedoch weder umgekehrt von A auf B und C noch B und C gegenseitig). Ein spezifischer, dedizierter Export von einzelnen Membern an bestimmte Klassen ist in C++ nicht möglich; diesen gibt es dafür in EIFFEL (s. Abschnitt 52.2). Mit JAVAs Modulen und dem dedizierten (qualifiziert genannten) Export wird das Friend-Konzept auf Ebene der Pakete zumindest angenähert.

Frage: Was ist das Friends-Konzept in C++?
Antwort: Das Friends-Konzept in C++ ermöglicht es, dass bestimmte Klassen auf private Elemente einer anderen Klasse zugreifen können, ohne direkte Mitglieder dieser Klasse zu sein.

Frage: Warum ist das Friends-Konzept in C++ nützlich?
Antwort: Das Friends-Konzept ist nützlich, wenn ein Teilproblem in der Programmierung nicht von einer einzelnen Klasse gelöst werden kann, sondern die Zusammenarbeit mehrerer Klassen erfordert. Es ermöglicht, dass diese Klassen eng zusammenarbeiten können, ohne dass alle Klassen dieselbe Schnittstelle haben müssen.

Frage: Wie wird in C++ festgelegt, welche Klassen auf die privaten Elemente einer anderen Klasse zugreifen dürfen?
Antwort: In C++ wird festgelegt, welche Klassen auf die privaten Elemente einer anderen Klasse zugreifen dürfen, indem man die betreffenden Klassen mit dem Schlüsselwort "friend" in der Zielsklasse deklariert. Zum Beispiel: friend class B; und friend class C;

Frage: Welchen Nachteil hat die Verwendung von Paketen in Java für die Zusammenarbeit von Klassen?
Antwort: In Java hatte man bis zur Version 8 die Möglichkeit, Klassen in ein Paket zu verfrachten, um die Zusammenarbeit von Klassen zu ermöglichen. Der Nachteil dabei ist, dass alle Klassen desselben Pakets dieselbe Schnittstelle jeder einzelnen enthaltenen Klasse haben, was die Aufteilung der Klassen auf Pakete einschränken kann.

Frage: Gibt es in C++ die Möglichkeit, einzelne Member einer Klasse spezifisch an bestimmte Klassen zu exportieren?
Antwort: Nein, in C++ ist es nicht möglich, einzelne Member einer Klasse spezifisch an bestimmte Klassen zu exportieren. Stattdessen erlaubt das Friends-Konzept, dass bestimmte Klassen auf alle privaten Elemente einer anderen Klasse zugreifen können.

Frage: Wie wird das Friends-Konzept in Java angenähert?
Antwort: Das Friends-Konzept wird in Java durch die Verwendung von Modulen und den dedizierten (qualifizierten) Export auf Ebene der Pakete angenähert. Dies ermöglicht eine kontrollierte Freigabe von Elementen an bestimmte Pakete.