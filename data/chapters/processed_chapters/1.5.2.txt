1.5.2 Sichtbarkeit

Eine Variable bezeichnet also ein Objekt. Wer auf eine Variable zugreifen kann, kann damit automatisch auch auf das Objekt zugreifen, das die Variable bezeichnet. Tatsächlich sind alle Objekte, für die es keine eindeutige literale Repräsentation gibt (wie sie Zeichen, manche Zahlen und Symbole haben), nach ihrer Erzeugung nur noch über Variablen zugreifbar. Die einzige Ausnahme bilden hier die sogenannten konstanten Methoden, die jedoch erst in Abschnitt 4.3.6 behandelt werden.
Nun ist es nicht sinnvoll, dass in einem Programm alle Variablen (und damit auch alle Objekte) von überall her zugreifbar sind. Um den Zugriff auf Variablen einzuschränken, gibt es den Begriff der Sichtbarkeit und Regeln für die Sichtbarkeit von Variablen. Kurzgefasst ist die Sichtbarkeit einer Variable gleichbedeutend damit, dass man ihren Namen verwenden kann (und damit auch Zugriff auf das von diesem Namen bezeichnete Objekt hat). Dabei bezieht sich die Sichtbarkeit immer auf einen Abschnitt von Programmcode: Wenn eine Variable in einem Abschnitt sichtbar ist, dann entspricht jedes Vorkommen des Variablennamens in diesem Abschnitt einer ihrer Verwendungen.
Die einzelnen Programmiersprachen unterscheiden sich teilweise deutlich in der Definition ihrer Sichtbarkeitsregeln. Häufig wird jedoch zwischen sogenannten globalen und lokalen Variablen unterschieden. Dabei sind beide Begriffe relativ zu verstehen: Lokale Variablen sind in ihrer Sichtbarkeit auf den Programmabschnitt beschränkt, um den es gerade geht (sowie gegebenenfalls auf dessen Unterabschnitte). Globale Variablen sind auch außerhalb davon (insbesondere in übergeordneten Abschnitten) sichtbar. Variablen, die überall sichtbar sind, sind also immer (relativ zu jedem Programmabschnitt) global. Wenn eine Variable außerhalb eines bestimmten Programmabschnitts, aber nicht überall sichtbar ist, sagt man auch, sie sei global zu dem Programmabschnitt; sie ist dann lokal zu einem übergeordneten (umschließenden) Programmabschnitt. Lokale Variablen überdecken übrigens immer globale Variablen gleichen Namens; man spricht dann auch von "Hiding".
In SMALLTALK müssen globale Variablen mit einem Großbuchstaben beginnen. Smalltalk und Transcript sind zwei prominente Beispiele für globale Variablen. Lokale Variablen hingegen beginnen mit einem Kleinbuchstaben und sind auf den Sichtbarkeitsbereich eines Objekts (oder auch nur Teilen davon) beschränkt. Für die genaue Angabe der Sichtbarkeitsregeln in SMALLTALK fehlt uns noch einiges; wir werden daher erst in den folgenden Abschnitten darauf eingehen; wir können aber schon hier schlussfolgern, dass in SMALLTALK der Unterschied zwischen lokal und global nicht relativ ist (es also nur zwei verschiedene Programmabschnitte gibt).

Frage: Was bezeichnet eine Variable in der Programmierung?
Antwort: Eine Variable bezeichnet ein Objekt.

Frage: Warum sind nicht alle Variablen und Objekte in einem Programm von überall her zugreifbar?
Antwort: Die Zugriffsbeschränkung auf Variablen und Objekte erfolgt durch die Definition der Sichtbarkeit und entsprechende Regeln für die Sichtbarkeit von Variablen.

Frage: Wie wird die Sichtbarkeit einer Variable definiert?
Antwort: Die Sichtbarkeit einer Variable bezieht sich immer auf einen Abschnitt des Programmcodes, in dem der Variablenname verwendet werden kann und damit Zugriff auf das von diesem Namen bezeichnete Objekt besteht.

Frage: Was sind die Unterschiede zwischen globalen und lokalen Variablen?
Antwort: Globale Variablen sind außerhalb des aktuellen Programmabschnitts sichtbar, während lokale Variablen auf den aktuellen Sichtbarkeitsbereich (Abschnitt) beschränkt sind.

Frage: Wie werden globale Variablen in SMALLTALK gekennzeichnet?
Antwort: In SMALLTALK müssen globale Variablen mit einem Großbuchstaben beginnen.

Frage: Gibt es in SMALLTALK eine relative Unterscheidung zwischen globalen und lokalen Variablen?
Antwort: Nein. In SMALLTALK gibt es keinen relativen Unterschied zwischen globalen und lokalen Variablen; es gibt nur zwei verschiedene Programmabschnitte in Bezug auf die Sichtbarkeit von Variablen.