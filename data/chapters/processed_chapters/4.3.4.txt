4.3.4 Verbergen der Repräsentation des Zustands hinter Methoden

In SMALLTALK sind die Instanzvariablen eines Objekts nur für das Objekt selbst sichtbar (und somit auch zugreifbar) [^23^]. Genauer gesagt, sind die Methoden die einzigen Stellen im gesamten Programm, an denen auf die Instanzvariablen des Objekts, dem die Methoden zugeordnet sind, direkt zugegriffen werden kann. Die Struktur des Objekts bleibt somit verborgen, und sein Zustand wird gekapselt (siehe Abschnitt 3.2 sowie unten für ein praktisches Beispiel).
Um die Belegung der Instanzvariablen und damit den Zustand eines Objekts auszulesen oder zu verändern, sind Methoden erforderlich. Beispielsweise muss das Objekt eine Methode bereitstellen, die den Wert einer Instanzvariable mit dem Namen "a" zurückgibt.
Diese Methode entspricht im Wesentlichen einem in JAVA gebräuchlichen sogenannten "Getter" für eine ansonsten nicht zugreifbare Variable. Es ist wichtig zu beachten, dass die Namensgleichheit von Methode und Variable nicht darüber hinwegtäuschen sollte, dass es sich um verschiedene Dinge handelt - Methode und Variable könnten genauso gut unterschiedliche Namen haben.Getter und Setter werden zusammen auch als "Zugriffsmethoden" oder "Accessoren" bezeichnet.
Die oben genannten Zugriffsmethoden werden aufgerufen, indem man dem Objekt, zu dem die Instanzvariable "a" gehört, die Nachricht "a" (zum Lesen) oder "a:" mit einem Objekt als Parameter (zum Schreiben) sendet. Das Empfängerobjekt antwortet darauf im ersten Fall, indem es "a" zurückgibt, und im zweiten Fall, indem es sich selbst zurückgibt. Es ist wichtig zu beachten, dass bei der Rückgabe keine Kopie, sondern der Inhalt der Variable (oder vielmehr ein Verweis darauf) zurückgegeben wird.
Auf der anderen Seite bedeutet die begrenzte Sichtbarkeit von Instanzvariablen nicht, dass der Zugriff auf Objekte, auf die sie verweisen, verhindert wird (aufgrund von möglichen Aliasen). Beachten Sie, dass sowohl "b" als auch die Instanzvariable "a" von "anObject" auf dasselbe Objekt verweisen, was faktisch die Kapselung des Zustands von "anObject" durchbricht.
Es sollte nochmals betont werden, dass im ersten Ausdruck "a" eine Nachricht darstellt und keinesfalls der Name der Instanzvariable des Objekts ist. Es handelt sich nicht um das Äquivalent zu dem aus JAVA bekannten "anObject.a", sondern vielmehr dem von "anObject.getA()" (wobei die Methode in JAVA per Konvention natürlich genauso gut "a()" genannt werden könnte). In SMALLTALK ist ein direkter Zugriff auf die Instanzvariable von außen wie in JAVA nicht möglich. Der Zugriff auf eine Instanzvariable kann also durch das Fehlen entsprechender Zugriffsmethoden verhindert werden, oder er kann auf Lesen oder Schreiben beschränkt werden, indem nur die jeweilige Zugriffsmethode zur Verfügung gestellt wird.
Schließlich sei darauf hingewiesen, dass im Gegensatz zu benannten Instanzvariablen indizierte Instanzvariablen nicht direkt, sondern nur über die beiden vordefinierten Nachrichten "at:" und "at:put:" gelesen und geschrieben werden können.
Es ist in SMALLTALK also nicht möglich, indizierte Instanzvariablen eines Objekts (im Gegensatz zu benannten) durch Nicht-Deklaration von Zugriffsmethoden zu verbergen (vor Zugriff zu schützen). Zugleich folgt aus der festen Vorgabe der beiden Zugriffsmethoden, dass jedes Objekt nur genau eine (unbenannte) Menge von indizierten Instanzvariablen haben kann.
Die ausschließliche Abfrage und Änderung des Zustandes von Objekten über Methoden hat den Vorteil, dass man sich nicht darauf festlegt, wie der Zustand eines Objekts tatsächlich codiert ist. So können beispielsweise einem Punktobjekt Methoden zum Setzen und Abfragen sowohl von kartesischen als auch von polaren Koordinaten zugeordnet werden. Dabei muss nur eine Instanzvariable für eine Art von Koordinaten vorgesehen werden, und die anderen können jeweils berechnet werden. Dies ermöglicht eine flexible Gestaltung der Zustandsrepräsentation eines Objekts, während die Schnittstelle zur Abfrage und Änderung des Zustands durch Methoden definiert wird.
Man betrachtet die Art und Weise, wie ein Objekt seinen Zustand codiert, als sein Implementationsgeheimnis und die Menge der Methodensignaturen, die den Zugriff auf das Objekt (seinen Zustand) erlauben, als sein Interface. Mehr dazu in Abschnitt 4.3.8.

Frage: Warum sind die Instanzvariablen eines Objekts in SMALLTALK nur für das Objekt selbst sichtbar und nicht für den Zugriff von außen?
Antwort: In SMALLTALK sind die Instanzvariablen eines Objekts nur für das Objekt selbst sichtbar, um den Zustand des Objekts zu kapseln und seine Struktur vor direktem Zugriff von außen zu schützen. Dies fördert das Prinzip der Verbergen von Implementierungsdetails und ermöglicht eine flexiblere Gestaltung der Zustandsrepräsentation eines Objekts.

Frage: Wie können in SMALLTALK Zugriffsmethoden für Instanzvariablen erstellt werden?
Antwort: In SMALLTALK können Zugriffsmethoden für Instanzvariablen erstellt werden, indem Methoden erstellt werden, die den Wert einer Instanzvariable zurückgeben (Getter-Methode) oder den Wert einer Instanzvariable setzen (Setter-Methode). Zum Beispiel kann eine Methode "getA" erstellt werden, um den Wert der Instanzvariable "a" zurückzugeben, und eine Methode "setA:" kann erstellt werden, um den Wert der Instanzvariable "a" zu setzen.

Frage: Warum ist es in SMALLTALK nicht möglich, direkt auf die Instanzvariablen eines Objekts zuzugreifen?
Antwort: In SMALLTALK ist es nicht möglich, direkt auf die Instanzvariablen eines Objekts zuzugreifen, um die Kapselung des Zustands und das Verbergen von Implementierungsdetails zu fördern. Der Zugriff auf Instanzvariablen erfolgt stattdessen über Zugriffsmethoden, die die Leser- und Schreiberfunktionalität bereitstellen.

Frage: Was ist der Unterschied zwischen einer benannten Instanzvariable und einer indizierten Instanzvariable in SMALLTALK?
Antwort: In SMALLTALK können benannte Instanzvariablen direkt über ihren Namen zugegriffen werden, während indizierte Instanzvariablen nur über die vordefinierten Nachrichten "at:" und "at:put:" gelesen und geschrieben werden können. Der Zugriff auf indizierte Instanzvariablen erfolgt nicht über Zugriffsmethoden, sondern über diese Nachrichten.