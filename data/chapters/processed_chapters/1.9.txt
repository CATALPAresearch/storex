1.9 Lebenslauf von Objekten

In SMALLTALK beginnt der Lebenslauf eines Objekts mit seiner Erzeugung und endet mit seiner Entsorgung durch eine Speicherbereinigung, die sogenannte "Garbage Collection". Garbage Collection ist ein Mechanismus, der Objekte aus dem Speicher entfernt, wenn sie nicht mehr zugreifbar sind. Da in SMALLTALK auf Objekte nach ihrer Erzeugung ausschließlich über Variablen (Namen) zugegriffen werden kann, kann ein solches Objekt genau dann entfernt werden, wenn keine Variable mehr auf es verweist. Es kann entfernt werden, muss aber nicht; aus Sicht der Programmiererin ist es ausreichend, dass das Objekt nicht mehr bekannt oder benannt ist — es kann somit nicht mehr aufgefunden und durch eine Zuweisung einer Variable zugewiesen werden. Bei der Implementierung von Garbage-Collection-Algorithmen besteht daher erhebliche Freiheit.
Wenn Peter und Michaela heiraten, dann schlägt sich dies unter anderem in der Zuweisung petersNachmane := michaelasNachname nieder. Wenn 'Müller' keine Aliase (wie beispielsweise "paulasNachname") hatte, kann es nach der Zuweisung aus dem Speicher entfernt werden — es wäre selbst bei Bedarf nicht mehr auffindbar.
Von der automatischen Speicherbereinigung ausgenommen sind bestimmte Objekte mit eindeutiger literaler Repräsentation (wie z. B. kleine Zahlen, Zeichen und Symbole). Im Falle von Zahlen und Zeichen liegt das jedoch weniger an der Natur dieser Objekte selbst als vielmehr an der Tatsache, dass diese in der Regel nicht als Objekte im Speicher angelegt werden (so dass Variablen darauf verweisen könnten), sondern dass sie selbst, als Werte (und anstelle von Zeigern), in Variablen gespeichert werden (siehe Abschnitt 1.5.1). Sie werden "entfernt", indem einer Variable ein neuer Wert zugewiesen wird. Symbole werden schon deswegen nicht aus dem Speicher entfernt, weil sie in einer Symboltabelle abgelegt sind (und somit immer mindestens einmal referenziert werden; siehe Fußnote 5).
Der Mut zur Verabschiedung von der expliziten Speicherfreigabe war eine der wichtigsten Entscheidungen beim Entwurf von SMALLTALK. Man hat einfach anerkannt, dass die genaue Buchführung darüber, auf welche Objekte noch zugegriffen wird, zu schwierig ist, um die Verantwortung dafür den Anwendungsprogrammierern zu überlassen. Wer das Problem nicht unmittelbar einsichtig findet, halte sich vor Augen, dass der Ort der Erzeugung eines Objektes und seine erste Zuweisung zu einer Variable im Programm möglicherweise weit entfernt sind von der Stelle, an der dieser Variable ein anderes Objekt zugewiesen wird, es möglicherweise viele solcher Stellen gibt, von denen mal die eine, mal die andere zuerst erreicht wird, und dass in der Zwischenzeit beliebig viele Aliase auf das Objekt angelegt worden sein könnten, die alle mit berücksichtigt werden müssen, um zu entscheiden, ob das Objekt noch in Verwendung ist.
Eine vorzeitige Entfernung aus dem Speicher hingegen führt dazu, dass Variablen ins Leere zeigen (eine häufige Quelle von Programmabstürzen) oder dass, bei einer Wiederverwendung des Speichers, die Variable plötzlich auf ein anderes Objekt verweist, das ihr aber nie explizit zugewiesen wurde — ein quasi zufälliges Programmverhalten, das mit hoher Wahrscheinlichkeit zu schweren Programmfehlern führen würde. Ein anderes Beispiel entsteht, wenn in einer Verzweigung eines Programms entweder ein neues oder ein bereits vorhandenes Objekt einer Variable zugewiesen wird. Woher weiß man bei der weiteren Benutzung dieser Variable, ob das Objekt schon vorher existierte und vielleicht schon andere Variablen auf es verweisen, oder ob es gerade erst neu erzeugt wurde und damit noch unbenutzt ist? Wer ist für die Entsorgung des Objekts verantwortlich? All diese Betrachtungen kann man sich in Gegenwart der Garbage Collection ersparen.
Im objektorientierten Jargon spricht man übrigens häufig auch vom "Lebenszyklus" ("Life Cycle") eines Objekts. Genaugenommen ist dies jedoch irreführend, denn das Wort "Zyklus" verspricht, dass das Leben nach seinem Ende wieder neu beginnt. Gerade dies ist aber, wie eben erläutert, nicht der Fall: Objekte werden nicht recycelt, sondern höchstens der Speicherplatz, den sie belegen.

Frage: Was ist die "Garbage Collection" in SMALLTALK?
Antwort: Die "Garbage Collection" ist ein Mechanismus in SMALLTALK, der Objekte aus dem Speicher entfernt, wenn sie nicht mehr über Variablen zugreifbar sind.

Frage: Wie wird sichergestellt, dass ein Objekt in SMALLTALK aus dem Speicher entfernt werden kann?
Antwort: Ein Objekt in SMALLTALK kann aus dem Speicher entfernt werden, wenn keine Variable mehr auf dieses Objekt verweist und es somit nicht mehr erreichbar ist.

Frage: Warum sind Objekte mit eindeutiger literaler Repräsentation von der Garbage Collection ausgenommen?
Antwort: Objekte mit eindeutiger literaler Repräsentation, wie kleine Zahlen, Zeichen und Symbole, werden normalerweise nicht als separate Objekte im Speicher angelegt. Sie werden durch Werte in Variablen repräsentiert und können "entfernt" werden, indem einer Variable ein neuer Wert zugewiesen wird.

Frage: Warum wurde in SMALLTALK die explizite Speicherfreigabe aufgegeben?
Antwort: Die explizite Speicherfreigabe wurde in SMALLTALK aufgegeben, da es schwierig ist, genau zu verfolgen, welche Objekte noch referenziert werden, insbesondere in großen und komplexen Programmen. Die Verantwortung dafür den Anwendungsprogrammierern zu überlassen, würde zu vielen potenziellen Programmierfehlern führen.

Frage: Welche Vorteile bietet die Garbage Collection in SMALLTALK?
Antwort: Die Garbage Collection verhindert vorzeitige Entfernung von Objekten, die noch in Verwendung sind, und stellt sicher, dass Variablen auf gültige Objekte verweisen. Dies trägt zur Stabilität und Sicherheit von Programmen bei.

Frage: Was ist der Unterschied zwischen dem "Lebenslauf" und dem "Lebenszyklus" eines Objekts in der objektorientierten Programmierung?
Antwort: Der "Lebenslauf" eines Objekts in SMALLTALK beschreibt seine Erzeugung, Verwendung und Entfernung aus dem Speicher. Der Begriff "Lebenszyklus" würde implizieren, dass das Objekt nach seinem Ende wiederverwendet wird, was in SMALLTALK nicht der Fall ist. Objekte werden nicht recycelt, sondern nur der von ihnen belegte Speicherplatz wird möglicherweise wiederverwendet.