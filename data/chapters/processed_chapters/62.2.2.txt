62.2.2 Grammatikalisch-inhaltliche (semantische) Namenskonventionen

Überaus angemessen, wenn auch nicht immer in letzter Konsequenz einzuhalten, ist, die verschiedenen Wortarten einer natürlichen Sprache für verschiedene Arten von Programmelementen zu verwenden. So legt beispielsweise der in Kurseinheit 1, Kapitel für Klassennamen Substantive verwendet. Tatsächlich ist es eine vielzitierte objektorientierte Technik, in der Analysephase eines Projekts alle Substantive der Spezifikation zu extrahieren, um auf der Basis der so gewonnenen Liste die Menge der Klassen eines Systems zu identifizieren.
Methoden, die eine Aktion implementieren (Befehle in EIFFEL, s. Kurseinheit 5, Abschnitt 52.2), wird man aufgrund ihres prädikativen Charakters mit Verben benennen, wobei es eine Stilfrage ist, ob man die Infinitiv- oder die Imperativform (im Englischen übrigens kein Unterschied in der Erscheinungsform) bevorzugt. Persönlich fühle ich mich hier an keine Regel gebunden außer an die, dass Ausdrücke durch meine Namenwahl möglichst lesbar werden. So klingt "hinzufügen" (Infinitivform) in meinen Ohren besser als "add" (Imperativform), "entfernen" (Imperativform) klingt dagegen besser als "remove" (Infinitivform). Man könnte natürlich der imperativen Form ein Reflexivpronomen hinzufügen wie etwa in "sich entfernen," aber das ist eher unüblich (obwohl nicht ohne Charme!). Verbergänzungen wie Präpositionen verwendet man in SMALLTALK dauernd (schon um mehrere Parameter voneinander abzusetzen); in Sprachen wie JAVA fügt man einem allgemeinen (und häufig überladenen) Verb dann gelegentlich noch ein Substantiv als Objekt des Prädikats hinzu, wie in "addElement." Gerade dieses Beispiel ist jedoch nicht unumstritten, da „Element“ hier gewissermaßen redundant ist — wenn es mehrere Methoden namens „add“ gibt, kann man sie auch mittels ihrer Parametertypen unterscheiden (also überladen). So heißt die entsprechende Methode im JDK heute auch nur noch "add(.)".
Keine Verben, sondern Adjektive (oder Kopula plus Prädikatsnomen) verwendet man hingegen für Methoden, die eine Abfrage darstellen (Queries; s. Abschnitt 52.2), wie etwa "istLeer" oder "hatInhalt."
Für Instanzvariablen verwendet man unterschiedliche Wortarten, und zwar abhängig davon, ob eine Instanzvariable ein Attribut oder eine Beziehung repräsentiert. Wenn es sich um ein Attribut handelt, das eine mehrwertige Qualität ausdrückt (wie Größe, Farbe etc.), dann wird man den Namen der Qualität verwenden und damit ein Substantiv (ggf. in Kleinschreibung). Wenn es sich um ein zweiwertiges (Boolesches) Attribut handelt, dann nimmt man das entsprechende Adjektiv (wie etwa "leer"), ein Gerundivum (z. B. "laufend") oder ein Partizip (wie etwa "gelöst"). Für Instanzvariablen, die Beziehungen ausdrücken, nimmt man gerne den Namen der Gegenrolle, also beispielsweise "mutter" in einer Kind-Mutter-Beziehung. Bei n-Beziehungen nehme ich persönlich gerne den Plural, also z. B. "kinder" (statt "kind") für die umgekehrte Richtung.
Interfaces sind zwar wie Klassen Typen, aber bezeichnen keine Allgemeinbegriffe, sondern eher Rollen, die die Objekte, die konkrete Ausprägungen der Allgemeinbegriffe sind, spielen können. Rollen werden aber, genau wie Allgemeinbegriffe, häufig durch Substantive bezeichnet: „Mutter“ ist ein Beispiel hierfür. Andere Rollen, insbesondere die, die mit Parametern von Methoden verbunden sind, werden häufig durch Adjektive bezeichnet: "Druckbar" beispielsweise könnte der Parametertyp einer Methode "drucken" sein, den das zu druckende Objekt haben muss. Tatsächlich enden viele der gebräuchlichen Interfacenamen im Englischen auf „able“ oder „ible“, so z. B. bei "Serializable."
Eine ganz interessante Option ergibt sich übrigens für Programmiererinnen, deren Muttersprache nicht Englisch ist: Man hat hier die Möglichkeit, bei der Wahl der Bezeichner zwischen zwei Sprachen zu wählen und damit eine zusätzliche Form der Differenzierung einzusetzen. Ich persönlich verwende dann gerne für Begrifflichkeiten aus der Anwendungsdomäne (also dem Gegenstandsbereich, mit dem sich das Programm befasst) deutsche Bezeichner und für solche aus der technischen Umsetzung (Hilfsklassen etc.) englische. Alternativ kann man natürlich auch alle selbst beigesteuerten Programmelemente auf Deutsch benennen, um sie von den aus Bibliotheken und Frameworks zusammengeklaubten zu unterscheiden.

Frage: Welche Wortarten einer natürlichen Sprache sollten für verschiedene Arten von Programmelementen verwendet werden?
Antwort: Es ist angemessen, die verschiedenen Wortarten einer natürlichen Sprache für verschiedene Arten von Programmelementen zu verwenden. Zum Beispiel werden in der objektorientierten Programmierung Substantive oft für Klassennamen verwendet.

Frage: Wie kann die Analysephase eines Projekts zur Identifizierung der Klassen eines Systems beitragen?
Antwort: In der Analysephase eines Projekts können alle Substantive aus der Spezifikation extrahiert werden, um auf der Basis dieser Liste die Menge der Klassen eines Systems zu identifizieren. Dies ist eine vielzitierte objektorientierte Technik.

Frage: Welche Art von Methoden wird oft mit Verben benannt, und welche Formen von Verben können verwendet werden?
Antwort: Methoden, die eine Aktion implementieren (Befehle), werden oft mit Verben benannt. Bei der Wahl der Verben ist es eine Stilfrage, ob man die Infinitiv- oder die Imperativform bevorzugt. Beispielsweise kann man "hinzufügen" (Infinitivform) oder "entfernen" (Imperativform) verwenden.

Frage: Welche Namenskonvention wird für Methoden, die Abfragen darstellen (Queries), vorgeschlagen?
Antwort: Für Methoden, die Abfragen darstellen (Queries), werden oft Adjektive oder Kopula plus Prädikatsnomen verwendet. Beispiele hierfür sind "istLeer" oder "hatInhalt."

Frage: Welche Wortarten werden für Instanzvariablen verwendet, abhängig davon, ob sie Attribute oder Beziehungen repräsentieren?
Antwort: Für Instanzvariablen, die Attribute repräsentieren, wie Größe oder Farbe, verwendet man oft den Namen der Qualität als Substantiv. Wenn es sich um zweiwertige (Boolesche) Attribute handelt, nimmt man das entsprechende Adjektiv oder ein Gerundivum. Für Instanzvariablen, die Beziehungen repräsentieren, verwendet man oft den Namen der Gegenrolle, wie "mutter" in einer Kind-Mutter-Beziehung.

Frage: Warum werden Interfaces oft mit Substantiven oder Adjektiven bezeichnet?
Antwort: Interfaces sind wie Klassen Typen, aber sie bezeichnen keine Allgemeinbegriffe, sondern eher Rollen, die die Objekte spielen können. Diese Rollen werden häufig durch Substantive oder Adjektive bezeichnet. Zum Beispiel enden viele Interfacenamen im Englischen auf „able“ oder „ible“, wie "Serializable."

Frage: Was ist eine interessante Option für Programmiererinnen, deren Muttersprache nicht Englisch ist, in Bezug auf die Wahl der Bezeichner?
Antwort: Programmiererinnen, deren Muttersprache nicht Englisch ist, haben die Möglichkeit, zwischen zwei Sprachen bei der Wahl der Bezeichner zu wählen und damit eine zusätzliche Form der Differenzierung einzusetzen. Man kann deutsche Bezeichner für Begrifflichkeiten aus der Anwendungsdomäne und englische Bezeichner für technische Umsetzungselemente verwenden, oder alle selbst beigesteuerten Programmelemente auf Deutsch benennen, um sie von denen aus Bibliotheken und Frameworks zu unterscheiden.