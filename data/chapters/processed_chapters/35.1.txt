35.1 Literale

In JAVA gibt es Literale für Zahlen, Zeichen und Strings. Für Arrays gibt es, da sie nicht aus Literalen zusammengesetzt sein müssen, etwas Ähnliches, nämlich die sogenannten Array-Initialisierer; sie werden in Kapitel 41 behandelt. Ob "true" und "false" bzw. "null" in JAVA Literale oder Schlüsselwörter sind, hängt vom Standpunkt ab: Die meisten Syntaxeditoren behandeln sie wie Schlüsselwörter, gemäß der Sprachdefinition handelt es sich jedoch um Literale, die die beiden booleschen Wahrheitswerte "wahr" und "falsch" bzw. den Wert des Nulltypen (UndefinedObject in SMALLTALK, in JAVA umbenannt) repräsentieren.
Zahlenliterale in JAVA können eine Vielzahl von Formen annehmen. Für drei besondere Werte im Fließkommabereich stehen jedoch keine Literale, sondern nur Konstanten zur Verfügung: Es handelt sich um "NaN" (für das englische "Not a Number") sowie "POSITIVE_INFINITY" und "NEGATIVE_INFINITY". Zeichenliterale werden in JAVA durch einfache Anführungsstriche eingeschlossen, String-Literale durch doppelte Anführungsstriche. Beide können Escape-Sequenzen zur Darstellung von Sonderzeichen enthalten.
Anders als in SMALLTALK sind in JAVA Klassen keine Objekte. Dennoch muss man in Programmen gelegentlich Klassen als Werte angeben. Das geht dann nicht (wie in SMALLTALK) per Angabe des Klassennamens (der dort ja zugleich als Pseudovariable definiert war), sondern mittels eines sogenannten Klassenliterals. Dieses besteht aus dem Namen der Klasse, gefolgt von ".class", also beispielsweise "Klasse.class".
Der Typ eines solchen Klassenliterals ist "Class<T>", also im obigen Beispiel "Class<Object>". Da in JAVA-Programmen Klassennamen auch direkt vorkommen dürfen, beispielsweise als Empfänger beim Aufruf von Klassenmethoden oder in Typtests wie "instanceof" (siehe Abschnitt 35.4), sind Klassenliterale eher selten anzutreffen. Die ganze Unterscheidung von Klassennamen und Klassenliteralen in JAVA ist meiner Meinung nach alles andere als glücklich.

Frage: Welche Arten von Literale gibt es in JAVA?
Antwort: In JAVA gibt es Literale für Zahlen, Zeichen und Strings.

Frage: Welche drei besonderen Werte im Fließkommabereich haben keine Literale, sondern nur Konstanten in JAVA?
Antwort: Die drei besonderen Werte im Fließkommabereich, die keine Literale, sondern nur Konstanten in JAVA haben, sind "NaN" (Not a Number), "POSITIVE_INFINITY" und "NEGATIVE_INFINITY".

Frage: Wie werden Zeichenliterale und String-Literale in JAVA dargestellt?
Antwort: Zeichenliterale werden in JAVA durch einfache Anführungsstriche (' ') eingeschlossen, während String-Literale durch doppelte Anführungsstriche (" ") eingeschlossen werden.

Frage: Wie gibt man in JAVA den Typ einer Klasse als Wert an?
Antwort: In JAVA gibt man den Typ einer Klasse als Wert mittels eines sogenannten Klassenliterals an. Dieses besteht aus dem Namen der Klasse, gefolgt von ".class", z. B. "Klasse.class".

Frage: Welcher Typ hat ein Klassenliteral in JAVA?
Antwort: Der Typ eines Klassenliterals in JAVA ist "Class<T>", wobei T der Typ der Klasse ist. Zum Beispiel hat "Class<Object>" den Typ "Class<Object>".

Frage: Warum sind Klassenliterale in JAVA eher selten anzutreffen?
Antwort: Klassenliterale sind in JAVA eher selten anzutreffen, da Klassennamen auch direkt in JAVA-Programmen verwendet werden können, beispielsweise als Empfänger beim Aufruf von Klassenmethoden oder in Typtests wie "instanceof".