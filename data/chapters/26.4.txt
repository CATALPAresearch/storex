26.4 Inklusionspolymorphie
Ein von Christopher Strachey, einem der Urväter der Programmierung als wissenschaftliche
Disziplin, eingeführter Begriff ist der der Polymorphie . Polymorphie bedeutet allgemein
52 Wer ein Beispiel weiß oder hat, möge es mir bitte schicken!
Vielgestaltigkeit und wird vor allem in der Biologie verwendet. In der Programmierung steht
er für verschiedene Dinge, die jedoch alle mit Typen zu tun haben.
Unter Inklusionspolymorphie , auch Subtypp olymorphie genannt , vers teht man im we-
sentlichen dasselbe wie unter Subtyping: Wo Objekte eines Typs erwartet werden, können
Objekte anderer Typen erscheinen, weil der erste Typ die anderen subsumiert (inkludiert).
Der Begriff ist vor allem in Abgrenzung zum parametrischen Polymorphismus (engl. para-
metric polymorphism , s. Kapitel 29) gebräuchlich; sonst redet man eher von Subtyping.
Das Interessante an der Inklusionspolymorphie ist, dass sich der Wertebe-
reich von Typen dadurch auf unvorhergesehene Umfänge aufweiten
lässt. Dies ist insbesondere für die Weiterentwicklung und Wiederverwen-
dung von Programmen interessant, bei der einfach neue Typen hinzugefügt, die anstelle
bereits existierend er eingesetzt werden können, ohne dass dazu am Programm sonst etwas
geändert werden müsste . Die Regeln einer strengen Typprüfung werden durch Inklusions-
polymorphie aufgelockert, ohne an Typsicherheit zu verlieren.
Insgesamt krankt die Definition des Subtyping und der Inklusionspolymor-
phie in der objektorientierten Programmierung jedoch daran, dass nicht
klar definiert ist, was alles zu verlangen ist, damit ein Objekt eines Typs tatsächlich auch da
auftauchen kann, w o ein Objekt eines anderen Typen erwartet wird. Zwar gibt die Regel
von Ko - und Kontravarianz eine klare Bedingung vor, aber wie Sie schon gesehen haben,
ist diese Bedingung aus praktischen Gründen nicht unumstritten. Dazu kommt, dass die
Regel einerseits gar nicht ausreicht, um Ersetzbarkeit zu garantieren, und andererseits zu
streng ist (s. Kurseinheit 6, Kapitel 54). Da Ersetzbarkeit aber der Definition des Subtypen-
begriffs zugrunde liegt , bleibt das ganze schwammig. In dieser Kurseinheit habe ich mich,
den meisten gängigen objektorientierten Programmiersprachen folgend, darauf zurückge-
zogen, zu garantieren, dass keine Typfehler, also Fehler der Art, dass eine bestimmte, ge-
forderte Eigenschaft (Methode) bei einem Objekt nicht vorhanden ist, auftreten können;
alles weitere wird dann in Kapitel 54 behandelt.
