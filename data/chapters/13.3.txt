13.3 Collections für andere Zwecke
Nicht alle Collecti ons dienen der Umsetzung von : n-Beziehungen. Ein gutes Beispiel gibt die
Klasse Interval .
Bei Instanzen der Klasse Interval handelt es sich um endliche arithme-
tische Folgen, also um beschränkte Folgen von Zahlen, die alle denselben
Abstand zueinander haben. Die Elemente einer solchen Collection müssen deswegen nicht
gespeichert, sondern können berechnet werden. Die Spezifikati on eines Intervalls umfasst
seinen Anfangs - und seinen Endwert sowie die Schrittweite, die auch negativ sein darf.
erzeugt ein Intervall, das die Zahlen 5, 3 und 1 enthält. Intervalle dienen vor allem dem
Zweck, sog. For -Schleifen zu emulieren (s. Abschnitt 4.6.3 in Kurseinheit 1):
etwa bewirkt, dass dem Laufparameter i nacheinander die Werte 5, 3 und 1 zugewiesen
werden. Die zweiparametrige Form
nimmt hingegen eine Standardschrittweite von 1 an. Für noch mehr Komfort ist in der Klasse
Number eine Methode to:by: vorgesehen, die ein entsprechendes Intervall zurückliefert:
erlaubt, statt Zeile 544
zu schreiben. Um der geschätzten Programmiererin auch noch die Klammern zu ersparen,
wurde gleich noch die Methode to:by:do: hinzugefügt, die daraus
zu machen erlaubt. (Man beachte, dass hier der Iterator in der Klasse Number und nicht in
einer Collection wie Interval definiert wurde.) Wie man sieht, ist es in SMALLTALK möglich,
ohne großen Aufwand neue Ausdrucksformen hinzuzufügen, ohne dazu (wie in den meis-
ten anderen Sprachen notwendig) die Syntax ändern zu müssen.
Selbsttestaufgabe 13.1
Sie finden folgendes Codefragment vor:
Kritisieren Sie es!
Zu guter Letzt sind auch die Klassen String und Symbol Collections,
und zwar genauer geordnete Collections fester Größe (wie Arrays), deren
Inhalt jedoch auf Zeichen (Instanzen der Klasse Character ) beschränkt ist. Strings sehen
neben der Möglich keit des Vergleichs (mittels der Operatoren <, <=, >, >=) auch noch ein
Pattern matching (Methode match: aString ) sowie spezielle Operatoren zur Behandlung
von Groß -/Kleinschreibung und eine Konversion in Literale vor. (Die Klasse Symbol ist übri-
gens eine Subklasse der Klasse String ; sie erbt damit alle Methoden von String .) Auf die
Möglichkeiten der literalen Repräsentation von Strings und Symbolen wurde bereits in Kurs-
einheit 1, Abschnitt 1.2, eingegangen.
Selbsttestaufgabe 13.2
Überlegen Sie sich, wie Sie das Case - (oder Switch -)Statement in SMALLTALK simulieren würden, und
gehen Sie auf die Einschränkungen ein, die Sie dazu machen müssen.
