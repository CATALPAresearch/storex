32 Fazit
Typsysteme sind immer noch Gegenstand aktiver Forschung. Während die prozeduralen
und objektorientierten Programmiersprachen eher pragmatisch an das Thema herangehen,
sind auf dem Gebiet der funktionalen Programmiersprachen ausgefeilte Theorien entwickelt
worden, die nach und nach auf andere Programmiersprachen übertragen werden. Die meis-
ten der heute in Gebrauch befindlichen objektorientierten Programmiersprachen sind hin-
gegen nicht die Quintessenz umfangreicher theoretischer Überlegungen, sondern vielmehr
das Produkt von Ideen, Experimenten und einer ganzen Men ge praktischer Zwänge.
So ist denn die Darstellung von Typsystemen in dieser Kurseinheit eher dazu gedacht, an
einen gewissen Konsens bei der Typisierung objektorientierter Programmiersprachen heran-
zuführen denn das Thema theoretisch aufzubereiten. Eine gute, nicht allzu theorielastige
Einführung in Typsysteme für die objektorientierte Programmierung ist das Buch „Object -
Oriented Type Systems “ von JENS PALSBERG und MICHAEL SCHWARTZBACH ; es is t recht dünn
und dabei noch einigermaßen angenehm zu lesen. Sehr viel weitergehend ist das Buch „ Ty-
pes and Programming Languages “ von BENJAMIN PIERCE, das einen Standard darstellt .
