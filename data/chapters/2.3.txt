2.3 Teil-Ganzes -Beziehungen
Eine Sonderrolle unter den Beziehungen nimmt die sog. Teil-Ganzes -Beziehung , je nach
Kontext und Jargon auch Komposition oder Aggregation genannt, ein. Teil -Ganzes -Bezie-
hungen bestimmen ganz wesentlich unsere Weltsicht: A lles, was wir anfassen oder betrach-
ten können, ist aus kleineren Teilen zusammengesetzt, die selbst wieder Zusammensetzun-
gen (Aggregate, Komposita) sind bis hinunter zu den Elementar -, d. h., unteilbaren Baustei-
nen. Vorteile von
Zwischenobjekten
effiziente
Bearbeitung von : n-
Beziehungen
entsc heidend für die
Produktivität
Nun ist der Begriff der Teil -Ganzes -Beziehung leider nicht so klar definiert,
wie es auf den ersten Blick scheint. Tatsächlich bestehen, je nach Art der
Zusammensetzung, zum Teil völlig unterschiedliche Wechselwirkungen
zwischen dem G anzen und seinen Teilen. Zudem gibt es neben der phy-
sischen Teil -Ganzes -Beziehung auch eine logische: So ist z. B. der Deutsche Bundestag aus
einer Anzahl von Abgeordneten zusammengesetzt und jede Familie aus ihren Mitgliedern.
Tatsächlich gibt es so viele Varianten der Teil -Ganzes -Beziehung, dass der (philosophische)
Diskurs darüber ganze Regale füllt und zu einer eigenen Disziplin geführt hat (der sog.
Mereologie ). Verständlicherweise kann dem eine Programmiersprache nicht folgen und für
jede dieser Beziehungen ein eigenes Sprachkonstrukt anbieten.
Stattdessen bieten die meisten (objektorientierten) Programmiersprachen
aber leider überhaupt kein Sprachkonstrukt an, das speziell für die Teil -
Ganzes -Beziehung gedacht wäre. Gleichwohl kann man die Unterscheidung zwischen In-
stanzvariablen mit Referenz - und Wertsemantik, falls vorhanden, dazu nutzen, um z umin-
dest eine spezielle Form der Teil -Ganzes -Beziehung abzubilden: Da bei Wertsemantik mit
der Entfernung eines Objekts aus dem Speicher auch alle Objekte, die als Werte seiner In-
stanzvariablen dienen, aus dem Speicher entfernt werden, kann man hier tatsäc hlich von
der Umsetzung einer bestimmten Form von Teil -Ganzes -Beziehung sprechen, nämlich einer
solchen, bei der die Existenz der Teile von der Existenz des Ganzen abhängt (in der UML
auch Komposition genannt). Für andere Formen, wie z. B. die Bildung einer Gruppe von
Objekten als Objekt mit eigener Identität (einem Verein beispielsweise), ist dieses Modell
aber nicht geeignet, da sonst mit Auflösung der Gruppe auch die Gruppenmitglie der ver-
schwinden müsste n. Für die SMALLTALK -Programmiererin sind diese Überlegungen aber so-
wieso kein Thema, denn sie hat die Wahl erst gar nicht.
Mit der Teil -Ganzes -Beziehung auf Programmebene werden wir uns in Kurseinheit 6 (ge-
nauer: Kapitel 58 und 59) noch ausführlicher beschäftigen. Hier sei nur schon soviel gesagt,
dass die Möglichkeit des (rekursiven) Aufbaus eines Software -Systems aus Teilen, die jeweils
ihren inneren Aufbau (ihre Kom position) kapseln , also insbesondere die Nichtexistenz von
Aliasen auf ihre Teile garantieren, genau das ist, was der objektorientierten Programmierung
im wesentlichen bis h eute fehlt.
