62.2.1 Mechanische (syntaktische) Namenskonventionen
Eine gängige Namenskonvention ist beispielsweise, Namen von Interfacetypen mit einem
großen „I“ beginnen zu lassen. Andere Namenskonventionen verlangen, dass Bezeichner,
die für ein Objekt oder einen Wert ste hen (also Variablen und Funktionsnamen) den Typ
dieses Objekts oder Werts widerspiegeln — die sog. ungarische Notation , von der es aller-
dings verschiedene Auslegungen gibt . Nach einer, eher dümmlichen, Auslegung müssen
beispielsweise alle Variablen, die Strings bezeichnen, mit „str“ beginnen (eine Information,
die Compiler und IDE aber ohnehin bereithalt en und die deswegen nicht noch den Namen
belasten muss) . Nach einer sinnvolleren Auslegung sollten Variablen namen um die Verwen-
dung ihres so bezeichneten Inhalts ergänzt werden, also die Funktion des durch sie bezeich-
neten Objekts oder Werts innerhalb des Kontextes, in dem die Variable gültig ist, angeben.
Diese kontextbezogene Funktion kann in der objektorientierten Programmierung jedoch
auch durch die Verwendung eines Interfaces anstelle einer Klasse als Typ bei der Deklaration
der Variable ausgedrückt (u nd somit auch vom Compiler überprüft) werden.
