1.4 Gleichheit und Identität von Objekten
Wie oben schon zur Unterscheidung von String - und Symbolliteralen angedeutet, w ird
durch das Vorkommen des gleiche n Literal s an mehreren Stellen eines Programms nicht
notwendigerweise dasselbe , also identische, Objekt repräsentiert — es kann auch sein, dass
die erzeugten Objekte nur gleich sind . Das wirft natürlich sofort die Frage a uf, was der
Unterschied zwischen Gleichheit und Identität bei Objekten ist, und wie überhaupt Objekte
unterschieden werden können.
Die Gleichheit von Objekten ist Definitionssache und orientiert sich in
der Regel an ihrem Erscheinungsbild oder ihrer Bedeutung . Gleichheit
wird in SMALLTALK durch den Gleichheitsoperator = getestet. So liefern
alle true . Aber auch
liefert true : Obwohl die beiden Zah lliterale verschieden sind (und für verschiedene, also
zwei, Objekte stehen), bezeichnen sie doch (aus mathematischer Sicht) die gleiche Zahl, so
dass man sie in SMALLTALK als gleich definiert hat.
Die Identität zweier Objekte (alternativ: die gleiche Identität zweier
Objekte) wird in SMALLTALK durch == getestet. So liefern
erwartungsgemäß true ,
kann hingegen zu false auswerten — zwei syntaktisch gleiche String -Literale können also
zwei Objekte mit verschiedener Identität repräsentieren . Dies ist zumindest dann sinnvoll, Gleichheit von
wenn die durch die String -Literale erzeugten Objekte unabhängig voneinander änderbar
sein sollen und deswegen tatsächlich zwei Objekte sein müssen. Übrigens : Phrasen wie
„zwei identische Objekte“ sind strenggenommen Unsinn , denn es handelt sich bei vorlie-
gender Identität definitionsgemäß nicht um zwei, sondern nur um ein Objekt . Die Frage
nach der Identität von Objekten ist nur dann sinnvoll, wenn die Objekte durch Namen (oder
Variablen ) repräsentiert werden . Mehr dazu in Abschnitt 1.5.
Selbsttestaufgabe 1.1
Prüfen Sie in einem oder mehreren Ihnen zur Verfügung stehenden SMALLTALK -Systemen für verschie-
dene gleiche Literale, ob die repräsentierten Objekte identisch sind. Beschränken Sie sich dabei nicht
nur auf die Beispiele der Zeilen 10–16. Was fällt Ihnen auf?
Während man sich unter der Identität einer Person oder eines Dokuments
leicht etwa s vorstellen kann, scheint der Begriff der Identität für manch
andere Objekte merkwürdig. Was hat man sich beispielsweise unter der
Identität der Zahl „1“ vorzustellen? Und wenn „1“ tatsächlich ein Objekt mit Identität ist,
was macht dieses Objekt zur Eins ? Oder ist die 1 vielleicht die Identität des Objekts „1“,
sind also das Objekt und seine Identität dasselbe?
Im Falle atomarer (also nicht zusammengesetzter) Objekte könnte man
versucht sein, die Identität zweie r Objekte mit der Gleichheit ihrer Erschei-
nungen gleichzusetzen: Es erscheint wenig sinnvoll, zwei immer gleiche
Objekte mit unterschiedlicher Identität zu haben. So kann man sich beispielsweise fragen,
warum man mehrere „1“ mit unterschiedlicher Identität in einem System haben sollte. Tat-
sächlich würde es wohl kaum auffallen, wenn zwei solche gleichen, aber sich dennoch auf-
grund ihrer Identität unterscheidenden Objekte zu einem verschmelzen würden. Ganz an-
ders ist das bei veränderlichen Objekten: Aufgrund ihrer Veränderlichkeit können sie sich
auch nur vorübergehend gleichen, müssen aber selbst während dieser (vorübergehenden)
Gleichheit voneinander zu unterscheiden sein, da sie sich hinterher wieder auseinanderent-
wickeln können und man dann nicht mehr wüss te, welches welches war. Da dies aber für
unveränderliche Objekte nicht der Fall sein kann, ist es durchaus berechtigt, zu fragen, wa-
rum sie sich nur aufgrund ihrer Identität unterscheiden sollten.
Die Antwort ist vor allem technischer Natur. Wenn sich ein unveränderli-
ches Objekt wie beispielsweise eine Zahl nicht aus einem Literal, sondern
aus einer Operation (einer Rechenoperation) ergibt, dann müsste, für eine
Zusammenlegung gleicher Objek te zu einem, immer erst überprüft wer-
den, ob ein gleiches Objekt bereits angelegt wurde. Da dies Programme stark verlangsamen
würde, nimmt man lieber in Kauf, mehrere gleiche, aber nicht identische Objekte zu haben.
Aber warum sind dann gleiche Zahlen manc hmal identisch, manchmal nicht? Die Antwort
ist noch technischer : Sie hat etwas mit der Repräsentation von Objekten im Speicher zu tun
und wird im nächsten Abschnitt gegeben. Und so werden in SMALLTALK bestimmte Objekte
eben anders behandelt als der Rest: Ganze Zahlen (Integer) bis zu einer bestimmten Größe Ist es immer sinnvoll,
und Zeichen sind aus technischen Gründen immer auch identisch, wenn sie gleich sind —
für den Rest (mit Ausnahme der Symbole!) gilt das nicht. Konzeptuelle Gründe für die Son-
derbehandlung gibt es nicht.
Zusammenfassend merken Sie sich am besten folgendes:
Die Missachtung dieses Merksatzes ist eine der häufigsten Fehlerquellen der objektorientier-
ten Programmierung. Besonders beim Vergleichen von Strings ist die Verwendung des Tests
auf Identität anstelle des Tests auf Glei chheit ein häufiger logischer Programmierfehler. Des-
wegen noch einmal ganz deutlich:
Verwenden Sie also grundsätzlich den Test auf Gleichheit ( =), nicht auf Identität ( ==), es sei
denn, Sie wollen prüfen, ob Sie es mit einem oder mit zwei Objekten zu tun haben.
