50.5 Ausblick

C-Sharp ist nicht nur ein Nachahmer von Java, sondern war auch ein Pionier für Spracherweiterungen, die es inzwischen auch in Java gibt: So gab es in C-Sharp von Anfang an sog. Attributes, die in Java in der Version 5 als Annotationen (was in jedem Fall der bessere Name ist) Einzug gehalten haben. C-Sharp hatte auch schon ab der Version 3.0 Lambda-Ausdrücke (ein Element funktionaler Programmiersprachen, in SMALLTALK — in Form von Blöcken — schon immer vorhanden und ein Grundelement der Sprache); Java ist erst mit Version 8 nachgezogen. Die Gefahr besteht jedoch darin, dass sich die beiden Sprachen gegenseitig übertrumpfen könnten — irgendwann wird jemand auf die Idee kommen, aus den besten Eigenschaften beider eine neue Sprache zu destillieren (KOTLIN mag hier ein erstes Beispiel sein). Vielleicht wird bei der Gelegenheit auch endlich mit dem C-Erbe aufgeräumt und die fürchterliche Syntax entsorgt.


Frage: Was sind Annotationen in Java?
Antwort: Annotationen in Java sind eine Spracherweiterung, die es ermöglicht, zusätzliche Informationen zu Klassen, Methoden und Variablen hinzuzufügen. Sie wurden von C-Sharp inspiriert und ermöglichen es, Metadaten zu definieren, die von Compilern, Tools und Frameworks ausgewertet werden können.

Frage: Was ist der Unterschied zwischen C-Sharp und Java?
Antwort: C-Sharp und Java sind beides objektorientierte Programmiersprachen, aber C-Sharp war ein Pionier für Spracherweiterungen, die es inzwischen auch in Java gibt, wie zum Beispiel Attribute und Lambda-Ausdrücke. Die Gefahr besteht jedoch darin, dass sich die beiden Sprachen gegenseitig übertrumpfen könnten und irgendwann jemand auf die Idee kommt, eine neue Sprache zu destillieren, die die besten Eigenschaften beider Sprachen vereint. Vielleicht wird bei der Gelegenheit auch endlich mit dem C-Erbe aufgeräumt und die fürchterliche Syntax von C-Sharp entsorgt.
