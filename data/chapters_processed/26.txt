26 Subtyping und Inklusionspolymorphie

Die Einführung von Typäquivalenz und Typkonformität bezog sich bislang lediglich auf das Verhältnis der Typdefinitionen, also der Intensionen der Typen. Die Frage des Zusammenhangs der Wertebereiche der Typen, also der Extensionen, ist dabei unberücksichtigt geblieben. Wenn aber die obige Definition von Typkorrektheit weiter Bestand haben soll, dann müssen die Werte zuweisungskompatibler Typen zum Wertebereich des Typen, an den zugewiesen werden soll, gehören. Zur Erinnerung: Typannotationen stellen Invarianten dar, die die möglichen Werte einer Variable beschränken. Diese Invarianten dürfen durch Zuweisungen nicht verletzt werden. Wenn man aber nun Zuweisungen von einem anderen Typen zulässt, dann wird die Typkorrektheit nur dann nicht verletzt, wenn der Wertebereich des anderen Typen (seine Extension) in dem desjenigen, dem zugewiesen wird, enthalten (inkludiert) ist. Mit anderen Worten: Damit eine Zuweisung a := b, bei der sich die Typen von a und b unterscheiden, zulässig ist, muss die Extension des Typs von b eine Teilmenge der Extension des Typs von a sein. Im Fall der Typerweiterung ist dies nicht automatisch der Fall.


Frage: Was ist die Beziehung zwischen den Wertebereichen von Typen bei Typäquivalenz und Typkonformität?
Antwort: Bei Typäquivalenz und Typkonformität müssen die Werte zuweisungskompatibler Typen zum Wertebereich des Typs, an den zugewiesen wird, gehören. Die Wertebereiche der Typen müssen also inkludiert sein, damit die Typkorrektheit nicht verletzt wird.

Frage: Was bedeutet Typäquivalenz und Typkonformität in Bezug auf Wertebereiche?
Antwort: Typäquivalenz und Typkonformität beziehen sich nicht nur auf das Verhältnis der Typdefinitionen, sondern auch auf den Zusammenhang der Wertebereiche der Typen. Wenn eine Zuweisung von einem anderen Typen zulässig ist, muss der Wertebereich des anderen Typs in dem desjenigen, dem zugewiesen wird, enthalten sein. Im Fall der Typerweiterung ist dies nicht automatisch der Fall.

Frage: Was ist die Bedingung für eine zulässige Zuweisung bei unterschiedlichen Typen?
Antwort: Damit eine Zuweisung a := b, bei der sich die Typen von a und b unterscheiden, zulässig ist, muss die Extension des Typs von b eine Teilmenge der Extension des Typs von a sein.


Auch nicht selbstverständlich ist die Teilmengenbeziehung bei der Typeinschränkung: Durch das Weglassen von Eigenschaften (Methoden) wird die Extension, also die Menge der Werte (Objekte), die darunter fallen, eher größer denn kleiner — je weniger spezifisch die Menge der geforderten Eigenschaften ist, desto mehr Objekte fallen darunter. Die sich daraus ergebende Teilmengebeziehung wäre also eher umgekehrt (die Extension des einschränkenden Typs enthält die des eingeschränkten). Etwas anders sieht es aus, wenn durch Typeinschränkung (Redefinition) die Ein- oder Rückgabetypen von Methoden beschränkt werden: Die Menge der Zeichnungen ist eine Teilmenge der Menge der Dokumente, auch weil sich Zeichnungen eben nur auf Plottern ausgeben lassen. Die Zuweisungskompatibilität von Zeichnung mit Dokument wäre also, was die Inklusion der Extensionen angeht, kein Problem. Man könnte nun die Typerweiterung unter oben gemachter Einschränkung und die zweite Form der Typeinschränkung als in dieselbe Richtung zielende Maßnahmen ansehen: Beide schränken Extensionen ein. Das lässt sich wie folgt erklären: Wenn man einer Menge von Objekten, die durch eine Anzahl Attribute alle gleichermaßen charakterisiert werden, weitere Attribute beimisst, dann schränkt man diese Menge ein, wenn die hinzugefügten Attribute nicht alle Objekte der Menge charakterisieren. Wenn man beispielsweise wie oben geschehen die Attributmenge des Typs Dokument um die Methode zeilen ^ <Collection> erweitert, dann fallen die Zeichnungen aus der durch Dokument beschriebenen Menge von Objekten heraus, weil sie keine Zeilen haben. Alternativ könnte man auch sagen, dass Dokumente grundsätzlich über Zeilen verfügen können, diese aber bei Zeichnungen immer in der Anzahl erscheint das weniger natürlich. 51 Man beachte die Parallelität zum Begriff der Spezialisierung: Der durch Typerweiterung oder -einschränkung aus Dokument hervorgegangene Typ Zeichnung ist spezieller als seine Vorlage. Nun ergibt sich aber gemäß obigem Beispiel (Zeilen 900–902) ein Sachverhalt, der trotz aller Harmonie von Typerweiterung und -einschränkung nicht weniger als den Verlust der Zuweisungskompatibilität bedeutet. Dieser resultiert jedoch bei genauerer Betrachtung nicht daraus, dass Zeichnungen keine Dokumente wären, sondern aus der mit der Typkorrektheit verbundenen, impliziten Allquantifiziertheit von Typinvarianten: Eine Methodendeklaration im Protokoll eines Typs Dokument wird nämlich interpretiert als „druckenAuf: ist definiert für alle Empfängerobjekte vom Typ Dokument und Parameterobjekte vom Typ Drucker“, was aber in dieser Allgemeinheit sachlich falsch ist. Typsysteme mit Typinvarianten der hier vorgestellten Art sind nicht in der Lage, andere als implizit allquantifizierte Aussagen über Wertebereiche zu treffen. Dies ist gewissermaßen der Preis der Einfachheit. Abhilfe schaffen neuere Typsysteme wie die Idee von den Dependent types, wie sie beispielsweise in SCALA zum Einsatz kommen: Hier kann man sich die Parametertypen von Methoden als Funktionen des Typs, zu dem die Methode gehört, vorstellen. Der Parametertyp von druckenAuf: aus obigem Beispiel wäre dann, in Abhängigkeit davon, ob die Methode auf einem Objekt vom Typ Dokument oder Zeichnung aufgerufen wird, Drucker oder Plotter. Wie man sich leicht vorstellen kann, ist die statische Prüfung solcher Bedingungen (Invarianz) aber nicht so einfach. Die Vereinigung von Typerweiterung und Typeinschränkung mit Zuweisungskompatibilität und der daraus folgenden Typkorrektheit bietet der Begriff des Subtyps.


Frage: Was ist die Teilmengenbeziehung bei der Typeinschränkung?
Antwort: Durch das Weglassen von Eigenschaften (Methoden) wird die Extension, also die Menge der Werte (Objekte), die darunter fallen, eher größer denn kleiner. Die sich daraus ergebende Teilmengebeziehung wäre also eher umgekehrt (die Extension des einschränkenden Typs enthält die des eingeschränkten).

Frage: Was ist der Unterschied zwischen Typerweiterung und Typeinschränkung?
Antwort: Typerweiterung und Typeinschränkung sind zwei Möglichkeiten, den Typ eines Objekts zu ändern. Typerweiterung bedeutet, dass dem Objekt weitere Attribute hinzugefügt werden, wodurch die Menge der Objekte, die darunter fallen, eingeschränkt wird. Typeinschränkung hingegen beschränkt die Ein- oder Rückgabetypen von Methoden, wodurch die Menge der Objekte, die darunter fallen, ebenfalls eingeschränkt wird. Typerweiterung und Typeinschränkung können als in dieselbe Richtung zielende Maßnahmen angesehen werden, da beide die Extension einschränken.
