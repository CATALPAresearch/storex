52.4 Vererbung und Überladen

EIFFEL erlaubt Mehrfachvererbung und gestattet sowohl das Überschreiben (in EIFFEL als "Redefinition" bezeichnet) als auch das Löschen von Methoden. Auf der positiven Seite steht dabei, dass zu Beginn einer Klassendefinition deklariert werden muss, welche Methoden in der Klasse überschrieben werden ("welche 'Features redefiniert' werden"). Natürlich unterstützt EIFFEL auch abstrakte Klassen; das entsprechende Schlüsselwort lautet jedoch "deferred" anstelle von "abstract". Andernfalls ist alles ähnlich wie in Java (besser gesagt, in Java ist alles ähnlich wie in EIFFEL - EIFFEL ist etwa zehn Jahre älter als Java).


Frage: Unterstützt EIFFEL Mehrfachvererbung?
Antwort: Ja, EIFFEL erlaubt Mehrfachvererbung.

Frage: Wie werden Methoden in EIFFEL überschrieben?
Antwort: In EIFFEL wird das Überschreiben von Methoden als "Redefinition" bezeichnet.

Frage: Kann man in EIFFEL Methoden löschen?
Antwort: Ja, EIFFEL gestattet das Löschen von Methoden.

Frage: Wie werden abstrakte Klassen in EIFFEL deklariert?
Antwort: In EIFFEL werden abstrakte Klassen mit dem Schlüsselwort "deferred" deklariert.

Frage: Unterstützt EIFFEL Mehrfachvererbung?
Antwort: Ja, EIFFEL unterstützt Mehrfachvererbung.

Frage: Was bedeutet "Redefinition" in EIFFEL?
Antwort: In EIFFEL wird das Überschreiben von Methoden als "Redefinition" bezeichnet.

Frage: Was bedeutet "deferred" in EIFFEL?
Antwort: In EIFFEL bezeichnet das Schlüsselwort "deferred" abstrakte Klassen.

Frage: Wie ist die Reihenfolge der Klassendeklaration in EIFFEL?
Antwort: In EIFFEL muss zu Beginn einer Klassendefinition deklariert werden, welche Methoden in der Klasse überschrieben werden ("welche 'Features redefiniert' werden").


BERTRAND MEYER ist ein entschiedener Gegner des Überladens. In EIFFEL ist es daher nicht erlaubt, dass eine Klasse zwei Methoden mit demselben Namen besitzt. Gleichwohl ist es erlaubt, dass verschiedene Klassen Methoden mit gleichem Namen haben - jedoch dürfen diese Klassen nicht in einer Vererbungsbeziehung zueinander stehen, es sei denn, die Methoden haben gleiche oder kovariant redefinierte Parameter. In diesem Fall handelt es sich nicht um Überladung, sondern um Überschreibung (was jedoch durch eine "Redefine"-Deklaration angezeigt werden muss). Es ist jedoch nicht immer möglich sicherzustellen, dass zwei Klassen, von denen Sie erben möchten, keine Methoden mit demselben Namen verwenden. Anstatt auf die Vererbung zu verzichten, ermöglicht es EIFFEL, geerbte Features umzubenennen. Hierzu gibt es eine "Rename"-Klausel, die es erlaubt, zwei geerbte Features mit demselben Namen unterschiedlich zu benennen. Es ist zu beachten, dass dies das dynamische Binden nicht beeinflusst: Wenn auf das Feature über den Typ der Klasse zugegriffen wird, von der das umbenannte Feature geerbt wurde, behält das Feature weiterhin seinen ursprünglichen Namen bei.


Frage: Was ist die Position von Bertrand Meyer zum Überladen von Methoden?
Antwort: Bertrand Meyer ist ein entschiedener Gegner des Überladens.

Frage: Was ist in Eiffel erlaubt, wenn zwei Methoden den gleichen Namen haben?
Antwort: In Eiffel ist es erlaubt, dass verschiedene Klassen Methoden mit gleichem Namen haben, solange diese Klassen nicht in einer Vererbungsbeziehung zueinander stehen oder die Methoden gleiche oder kovariant redefinierte Parameter haben.

Frage: Was bedeutet "Redefine" in Eiffel?
Antwort: "Redefine" ist eine Deklaration in Eiffel, die angibt, dass eine Methode eine andere Methode mit demselben Namen und denselben oder kovariant redefinierten Parametern überschreibt.

Frage: Was ermöglicht Eiffel, wenn zwei Klassen, von denen Sie erben möchten, Methoden mit demselben Namen verwenden?
Antwort: Eiffel ermöglicht es, geerbte Features umzubenennen, indem es eine "Rename"-Klausel gibt, die es erlaubt, zwei geerbte Features mit demselben Namen unterschiedlich zu benennen.

Frage: Wie wirkt sich das Umbenennen von geerbten Features auf das dynamische Binden in Eiffel aus?
Antwort: Wenn auf das Feature über den Typ der Klasse zugegriffen wird, von der das umbenannte Feature geerbt wurde, behält das Feature weiterhin seinen ursprünglichen Namen bei.

Frage: Was passiert mit dem ursprünglichen Namen einer umbenannten Methode in Eiffel?
Antwort: Wenn auf das Feature über den Typ der Klasse zugegriffen wird, von der das umbenannte Feature geerbt wurde, behält das Feature weiterhin seinen ursprünglichen Namen bei.

Frage: Was ermöglicht die "Rename"-Klausel in Eiffel?
Antwort: Die "Rename"-Klausel in Eiffel ermöglicht es, zwei geerbte Features mit demselben Namen unterschiedlich zu benennen.

Frage: Wie wirkt sich das Umbenennen von geerbten Features auf das dynamische Binden in Eiffel aus?
Antwort: Wenn auf das Feature über den Typ der Klasse zugegriffen wird, von der das umbenannte Feature geerbt wurde, behält das Feature weiterhin seinen ursprünglichen Namen bei.
