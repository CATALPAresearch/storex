35.2 Gleichheit und Identität

In JAVA wird, genau wie in SMALLTALK, zwischen Gleichheit und Identität von Objekten unterschieden. Die Gleichheit von Objekten wird mittels der Methode equals(.) (wobei (.) hier für einen nicht näher spezifizierten Parameter steht) geprüft, die Identität mittels == (bzw. != für das Negativ). equals(.) wird von der Klasse Object (in JAVA genau wie in SMALLTALK die Superklasse aller Klassen) geerbt und sollte in den Subklassen entsprechend der jeweiligen Bedeutung von Gleichheit überschrieben werden. Die Verwechslung von equals(.) und == ist auch in JAVA ein ziemlich häufiger Programmierfehler (siehe Abschnitt 1.4 in Kurseinheit 1). Das Gleichheitszeichen = steht in JAVA übrigens (genau wie in C, C++ und C#) für die Wertzuweisung, was ich persönlich für eine der großen Tragödien in der Informatik halte.

Frage: Wie wird in JAVA zwischen Gleichheit und Identität von Objekten unterschieden?
Antwort: In JAVA wird zwischen Gleichheit und Identität von Objekten unterschieden. Die Gleichheit von Objekten wird mittels der Methode equals(.) geprüft, während die Identität mittels == (bzw. !=) überprüft wird.

Frage: Welche Methode wird in JAVA verwendet, um die Gleichheit von Objekten zu prüfen?
Antwort: In JAVA wird die Methode equals(.) verwendet, um die Gleichheit von Objekten zu prüfen.

Frage: Welche Klasse erbt die Methode equals(.) in JAVA?
Antwort: Die Methode equals(.) wird von der Klasse Object geerbt, die in JAVA die Superklasse aller Klassen ist.

Frage: Warum ist die Verwechslung von equals(.) und == ein häufiger Programmierfehler in JAVA?
Antwort: Die Verwechslung von equals(.) und == ist auch in JAVA ein häufiger Programmierfehler, da sie unterschiedliche Bedeutungen haben. equals(.) prüft die Gleichheit von Objekten, während == die Identität überprüft.

Frage: Wofür steht das Gleichheitszeichen = in JAVA?
Antwort: Das Gleichheitszeichen = in JAVA steht für die Wertzuweisung, nicht für die Überprüfung der Gleichheit von Objekten.