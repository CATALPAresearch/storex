4.3.8 Protokoll

In SMALLTALK ist das Interface eines Objekts die Menge der Nachrichten, die es versteht. Dieses Interface wird in Form der sogenannten Protokollbeschreibung oder kurz des Protokolls spezifiziert. Es besteht aus den Methodensignaturen und den Kommentaren der zu den Nachrichten passenden Methoden, und es steht in Kontrast zur Implementierung, also der Liste der Methodenrümpfe, sowie den Instanzvariablen, die das Implementationsgeheimnis eines Objekts bilden. Dieses Geheimnis bleibt hinter seiner Protokollbeschreibung, also dem Interface, verborgen. Die Kommentare dürfen übrigens, wie in den meisten anderen Sprachen auch, als eine Art schwacher Ersatz für eine formale Spezifikation des Verhaltens angesehen werden, das in einer Methode implementiert wird.
Um die Programmierung zu erleichtern, wird das Protokoll von Objekten in den meisten SMALLTALK-Systemen in sogenannte Nachrichtenkategorien unterteilt. Diese Kategorien tragen jeweils einen Namen, der die in der Kategorie enthaltenen Methodennamen zusammenfasst. Da jede Methode genau in eine Nachrichtenkategorie fallen muss, stellen diese Kategorien eine Partitionierung des Interfaces eines Objekts dar. Einige dieser Kategorien können das Wort „private“ enthalten, was darauf hinweist, dass deren Methoden vorzugsweise nur vom Objekt selbst (über self) aufgerufen werden sollten. Beachten Sie jedoch, dass dies nicht vom Compiler erzwungen wird. Nachrichtenkategorien haben darüber hinaus keine weitere Bedeutung für die Programmausführung und dienen lediglich der besseren Lesbarkeit.
Protokolle werden in SMALLTALK nicht auf Objektebene, sondern auf Klassenebene spezifiziert. In STRONGTALK, einer Erweiterung von SMALLTALK um ein (optionales) Typsystem, werden Protokolle zu Typen erhoben. Da Protokolle nur Methoden enthalten, sind sie den Interfaces in JAVA sehr ähnlich. Tatsächlich werden Protokolle in STRONGTALK manchmal auch Interfaces genannt.

Frage: Was ist das Protokoll in SMALLTALK?
Antwort: In SMALLTALK ist das Protokoll eines Objekts die Menge der Nachrichten, die es versteht. Es wird in Form der Protokollbeschreibung spezifiziert und besteht aus den Methodensignaturen und den dazugehörigen Kommentaren der Methoden. Das Protokoll beschreibt das Interface eines Objekts.

Frage: Wie wird das Protokoll in SMALLTALK unterteilt?
Antwort: Das Protokoll von Objekten in SMALLTALK wird oft in sogenannte Nachrichtenkategorien unterteilt. Diese Kategorien haben Namen, die die enthaltenen Methodennamen zusammenfassen. Nachrichtenkategorien dienen der besseren Lesbarkeit und partitionieren das Interface eines Objekts. Einige Kategorien können das Wort "private" enthalten, um anzuzeigen, dass die darin enthaltenen Methoden vorzugsweise nur vom Objekt selbst aufgerufen werden sollten.

Frage: Was unterscheidet Protokoll und Implementierung in SMALLTALK?
Antwort: Das Protokoll beschreibt das Interface eines Objekts und umfasst die Methodensignaturen und dazugehörigen Kommentare. Die Implementierung hingegen besteht aus den tatsächlichen Methodenrümpfen und den Instanzvariablen, die das Implementationsgeheimnis eines Objekts bilden. Das Protokoll dient dazu, das Verhalten eines Objekts zu beschreiben, während die Implementierung die Details der Umsetzung enthält.

Frage: Wie werden Protokolle in SMALLTALK spezifiziert?
Antwort: In SMALLTALK werden Protokolle nicht auf Objektebene, sondern auf Klassenebene spezifiziert. Dies bedeutet, dass eine Klasse ein bestimmtes Protokoll implementiert und die Objekte dieser Klasse dieses Protokoll erben. In STRONGTALK, einer Erweiterung von SMALLTALK, werden Protokolle zu Typen erhoben und ähneln Interfaces in JAVA.