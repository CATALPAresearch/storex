51.3 Friends

Ein interessantes Konzept von C++, das einen direkten Bezug zur objektorientierten Programmierung hat, ist das Friends-Konzept. In der Praxis kommt es häufig vor, dass ein bestimmtes Teilproblem nicht von einer Klasse allein, sondern nur durch das Zusammenwirken mehrerer Klassen gelöst werden kann. Während diese Klassen untereinander eng kooperieren müssen und deshalb (relativ) intime Kenntnis voneinander benötigen (das heißt, auf Elemente zugreifen können müssen, die anderen Klassen verborgen bleiben sollen), gilt das für andere Klassen nicht unbedingt. Die Schnittstelle solcher kooperierenden Klassen sollte also nicht absolut, sondern relativ zu anderen Klassen definierbar sein.


Frage: Was ist das Friends-Konzept in C++?
Antwort: Das Friends-Konzept in C++ ist ein Mechanismus, der eine enge Kooperation zwischen Klassen ermöglicht. Dabei kann eine Klasse auf Elemente einer anderen Klasse zugreifen, die anderen Klassen verborgen bleiben sollen. Die Schnittstelle solcher kooperierender Klassen kann somit relativ zu anderen Klassen definiert werden.

Frage: Wofür wird das Friends-Konzept in C++ verwendet?
Antwort: Das Friends-Konzept wird verwendet, um die Schnittstelle von kooperierenden Klassen relativ zu anderen Klassen definieren zu können, indem es den Zugriff auf private und protected Elemente erlaubt, die anderen Klassen verborgen bleiben sollen.


In Java hatte man dazu bis zur Version 8 nur die Möglichkeit, die besagten Klassen in ein Paket zu verfrachten und die fraglichen Elemente mit paketweitem Zugriff (also ohne Zugriffsmodifizierer) zu deklarieren (Abschnitt 39.1 in Kurseinheit 4). Das hat jedoch den Nachteil, dass alle Klassen desselben Pakets dieselbe Schnittstelle jeder einzelnen enthaltenen Klasse haben; wenn es eine Klasse gibt, die eine ansonsten unsichtbare Eigenschaft x einer Klasse A sehen und eine andere, die eine Eigenschaft y derselben Klasse sehen soll, dann gibt es keine Aufteilung der Klassen auf Pakete, die genau dieses gestattet. Was man stattdessen gern hätte, ist ein dedizierter Export von Elementen einer Klasse, also ein zur Verfügung Stellen von Elementen an genau benannte Klassen. Dies bietet, in etwas gröberer Form, das Friends-Konzept von C++: Die Definition friend class B; friend class C; bewirkt, dass (Instanzen von) B und (von) C auf alle privat deklarierten Elemente von (Instanzen von) A zugreifen können (jedoch weder umgekehrt von A auf B und C noch B und C gegenseitig). Ein spezifischer, dedizierter Export von einzelnen Membern an bestimmte Klassen ist in C++ nicht möglich; diesen gibt es dafür in EIFFEL (s. Abschnitt 52.2). Mit Javas Modulen und dem dedizierten (qualifiziert genannten) Export wird das Friend-Konzept auf Ebene der Pakete zumindest angenähert.


Frage: Was ist das Friends-Konzept in C++?
Antwort: Das Friends-Konzept in C++ ist ein Mechanismus, der es einer Klasse erlaubt, anderen Klassen oder Funktionen den Zugriff auf ihre privaten Elemente zu gestatten. Dies wird durch die Deklaration friend class B; friend class C; erreicht, die angibt, dass Instanzen von B und C auf alle privat deklarierten Elemente von A zugreifen können.

Frage: Was bietet das Friends-Konzept in C++?
Antwort: Das Friends-Konzept in C++ ermöglicht es, dass bestimmte Klassen auf alle privat deklarierten Elemente einer anderen Klasse zugreifen können. Das heißt, dass die Definition friend class B; friend class C; bewirkt, dass (Instanzen von) B und (von) C auf alle privat deklarierten Elemente von (Instanzen von) A zugreifen können. Jedoch können weder A auf B und C noch B und C gegenseitig darauf zugreifen.
