62.2.1 Mechanische (syntaktische) Namenskonventionen

Eine gängige Namenskonvention ist beispielsweise, Namen von Interfacetypen mit einem großen "I" beginnen zu lassen. Andere Namenskonventionen verlangen, dass Bezeichner, die für ein Objekt oder einen Wert stehen (also Variablen und Funktionsnamen), den Typ dieses Objekts oder Werts widerspiegeln — die sog. ungarische Notation, von der es allerdings verschiedene Auslegungen gibt. Nach einer eher unklugen Auslegung müssen beispielsweise alle Variablen, die Strings bezeichnen, mit "str" beginnen (eine Information, die Compiler und IDE ohnehin bereithalten und die deswegen nicht noch den Namen belasten muss). Nach einer sinnvolleren Auslegung sollten Variablen um die Verwendung ihres so bezeichneten Inhalts ergänzt werden. Das bedeutet, die Funktion des durch sie bezeichneten Objekts oder Werts innerhalb des Kontextes, in dem die Variable gültig ist, anzugeben. Diese kontextbezogene Funktion kann in der objektorientierten Programmierung jedoch auch durch die Verwendung eines Interfaces anstelle einer Klasse als Typ bei der Deklaration der Variable ausgedrückt und somit auch vom Compiler überprüft werden.


Frage: Was ist die ungarische Notation?
Antwort: Die ungarische Notation ist eine Namenskonvention, bei der Bezeichner, die für ein Objekt oder einen Wert stehen, den Typ dieses Objekts oder Werts widerspiegeln. Es gibt verschiedene Auslegungen der ungarischen Notation, eine davon verlangt, dass alle Variablen, die Strings bezeichnen, mit "str" beginnen. Eine sinnvollere Auslegung ist, Variablen um die Verwendung ihres so bezeichneten Inhalts zu ergänzen, was in der objektorientierten Programmierung auch durch die Verwendung eines Interfaces anstelle einer Klasse als Typ bei der Deklaration der Variable ausgedrückt werden kann.

Frage: Wozu dienen Namenskonventionen?
Antwort: Namenskonventionen werden verwendet, um die Bedeutung von Bezeichnern zu verdeutlichen und die Lesbarkeit des Codes zu erhöhen. Eine gängige Namenskonvention ist beispielsweise, Namen von Interfacetypen mit einem großen "I" beginnen zu lassen. Nach einer sinnvolleren Auslegung der ungarischen Notation sollten Variablen um die Verwendung ihres so bezeichneten Inhalts ergänzt werden. Das bedeutet, die Funktion des durch sie bezeichneten Objekts oder Werts innerhalb des Kontextes, in dem die Variable gültig ist, anzugeben. Diese kontextbezogene Funktion kann in der objektorientierten Programmierung jedoch auch durch die Verwendung eines Interfaces anstelle einer Klasse als Typ bei der Deklaration der Variable ausgedrückt und somit auch vom Compiler überprüft werden.
