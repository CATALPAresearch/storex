51 C++

Mit einer so chaotischen Syntax, dass sogar Compiler raten müssen, ist es besser, dass C++-Code wiederverwendbar ist, denn niemand wird jemals daran denken, ihn rückzuentwickeln. Die "Funktion" der Programmiersprache - nämlich eine Erweiterung von C zu sein - ist ein grundlegendes Problem. Mit zahlreichen großen Projekten, die bereits in veralteten Dialekten geschrieben wurden, kann man C++ sicherlich als eine "sofortige Legacy"-Sprache betrachten.
Über C++ wurde viel geschrieben, und nicht alles davon war positiv. Dabei wird jedoch häufig vergessen, dass eine der harten Anforderungen bei der Entwicklung von C++ die vollständige Rückwärtskompatibilität zu C ist, was ein so schwerwiegender Nachteil ist, dass fast jede Kritik an C++ als unfair angesehen werden muss. Natürlich kann man in C++ völlig unlesbaren Code schreiben, aber das gilt auch für C, weil man in C völlig unlesbaren Code schreiben kann. Aber man kann auch C++ mit einer neuen Syntax versehen (mithilfe seines Präprozessors, der übrigens Turing-äquivalent ist und daher die Ausdrucksstärke einer vollwertigen Programmiersprache besitzt) und dann völlig lesbaren Code schreiben.

Frage: Warum wird C++ als "sofortige Legacy"-Sprache bezeichnet?
Antwort: C++ wird als "sofortige Legacy"-Sprache bezeichnet, weil sie eine Erweiterung von C ist und eine chaotische Syntax hat, die es schwer macht, den Code zu verstehen oder zurückzuentwickeln. Außerdem gibt es viele große Projekte, die bereits in veralteten C++-Dialekten geschrieben wurden.

Frage: Warum wird darauf hingewiesen, dass C++ eine Erweiterung von C ist?
Antwort: Es wird darauf hingewiesen, dass C++ eine Erweiterung von C ist, um zu betonen, dass eine der harten Anforderungen bei der Entwicklung von C++ die vollständige Rückwärtskompatibilität zu C ist. Dies bedeutet, dass C++-Code mit C-Code kombiniert werden kann und C++-Programmierer auf bestehende C-Bibliotheken zugreifen können.

Frage: Warum wird darauf hingewiesen, dass man in C++ völlig unlesbaren Code schreiben kann?
Antwort: Es wird darauf hingewiesen, dass man in C++ völlig unlesbaren Code schreiben kann, um zu betonen, dass die Lesbarkeit des Codes in C++ stark von der Programmierpraxis abhängt. C++ bietet die Flexibilität, Code auf unterschiedliche Weisen zu schreiben, von sehr lesbar bis hin zu sehr unlesbar, je nach den Entscheidungen der Entwickler.

Frage: Welche Freiheit bietet der Präprozessor in C++?
Antwort: Der Präprozessor in C++ bietet die Freiheit, die Syntax der Sprache durch Hinzufügen einer neuen Syntax zu verändern. Dies ermöglicht es, Code in einer für Entwickler verständlicheren Weise zu schreiben, wenn gewünscht.