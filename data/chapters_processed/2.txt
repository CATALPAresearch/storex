2 Beziehungen

Kein Objekt existiert isoliert. Im Gegenteil, Objekte müssen in Beziehung zueinander stehen, um Bedeutung zu erlangen. Zum Beispiel hat das Objekt "1" keine Bedeutung, solange es nicht eine spezifische Eigenschaft eines anderen Objekts beschreibt, wie die Hausnummer eines Hauses oder die Anzahl der Elemente in einem Array. Tatsächlich werden die meisten Objekte in einem System erst durch ihre Beziehungen zu anderen Objekten nützlich. Ein Objekt, das eine Person repräsentiert, wird erst dann durch den Namen "Hans Mustermann" identifizierbar, wenn es in einer entsprechenden Beziehung zur Person steht, und umgekehrt.

Frage: Warum stehen Objekte in Beziehung zueinander?
Antwort: Objekte stehen in Beziehung zueinander, um Bedeutung zu erlangen. Die meisten Objekte in einem System werden erst durch ihre Beziehungen zu anderen Objekten nützlich.

In der objektorientierten Programmierung werden sämtliche Informationen als ein Geflecht von Objekten dargestellt. Dieses Geflecht kann: navigiert werden, um von einem Datum (Stück Information) zu einem anderen zu kommen, oder auch manipuliert werden, um die repräsentierte Information zu verändern.
Das Datenmodell der objektorientierten Programmierung ähnelt dem Netzwerkmodell, das vor einigen Jahrzehnten die Grundlage für große Datenbankmanagementsysteme bildete, bevor es vom relationalen Datenmodell verdrängt wurde. Erst mit der Einführung objektorientierter Datenbanken gewinnt das Netzwerkmodell wieder an theoretischer Bedeutung.

Frage: Wie werden Informationen dargestellt?
Antwort: In der objektorientierten Programmierung werden sämtliche Informationen als ein Geflecht von Objekten dargestellt. Dieses Geflecht kann navigiert und manipuliert werden.

Frage: Wie wird das Geflecht von Objekten genutzt?
Antwort: Das Geflecht von Objekten kann navigiert werden, um von einem Datum zu einem anderen zu kommen, oder auch manipuliert werden, um die repräsentierte Information zu verändern.

In der objektorientierten Programmierung werden Beziehungen zwischen Objekten über Verweise hergestellt. Durch das Verfolgen dieser Verweise kann man von einem Objekt zum nächsten "navigieren". Es ist wichtig zu beachten, dass diese Verknüpfung immer gerichtet ist. Das bedeutet, dass man von einem Objekt zu einem anderen navigieren kann, aber nicht zwangsläufig wieder zurück. Dafür wäre ein Zeiger in Gegenrichtung erforderlich.
Variablen selbst enthalten ebenfalls Verweise. Wer also Zugriff auf die Variable hat, kann auch auf das referenzierte Objekt zugreifen und ist somit mit dem Objekt verknüpft. Es fehlt nur noch, Variablen den Objekten zuzuordnen, damit nur noch die Objekte darauf zugreifen können, und schon können Beziehungen auf einfache Weise ausgedrückt werden.

Frage: Wie werden Beziehungen zwischen Objekten hergestellt?
Antwort: Beziehungen zwischen Objekten werden über Verweise hergestellt. Durch das Verfolgen dieser Verweise kann man von einem Objekt zum nächsten "navigieren". Dabei ist zu beachten, dass diese Verknüpfung immer gerichtet ist und man nicht zwangsläufig wieder zurücknavigieren kann.

Frage: Wie werden Variablen für Beziehungen genutzt?
Antwort: Variablen enthalten Verweise. Wenn jemand Zugriff auf die Variable hat, kann er auch auf das referenzierte Objekt zugreifen und ist somit mit dem Objekt verknüpft. Es fehlt nur noch, Variablen den Objekten zuzuordnen, damit nur noch die Objekte darauf zugreifen können, und schon können Beziehungen auf einfache Weise ausgedrückt werden.