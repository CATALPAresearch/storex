Kurseinheit 1: Grundkonzepte der objektorientierten Programmierung

Ein laufendes objektorientiertes Programm muss man sich als eine Menge interagierender Objekte vorstellen. Damit die Objekte interagieren können, müssen sie verbunden sein; sie bilden dazu ein Geflecht, das neben Objekten aus Beziehungen zwischen diesen besteht. Das Geflecht verändert sich dynamisch infolge der Interaktion zwischen Objekten; es unterliegt aber gewissen, durch das Programm vorgegebenen statischen Strukturen. Die Unterscheidung zwischen Statik und Dynamik ist eine klassische der Programmierung. Während Programme traditionell statische Gebilde sind, die auf Papier oder in einem Nur-Lese-Speicher festgehalten werden können, ist ihre Ausführung immer etwas Dynamisches. Wenn aber Programme selbst als Daten aufgefasst werden, dann verwischt die Grenze zwischen Statik und Dynamik: Programme werden veränderlich. Insbesondere, wenn Programme sich selbst verändern können, ist die Unterscheidung zwischen Statik und Dynamik nur noch bedingt nützlich. Alternativ zu Statik und Dynamik kann man auch zwischen Struktur und Verhalten unterscheiden, wobei mit Struktur das oben erwähnte Objektgeflecht und mit Verhalten die (Spezifikation der) Folge seiner Veränderungen gemeint ist. Diese Unterscheidung liegt der Gliederung des Rests dieser Kurseinheit zugrunde: von Objekten (Kapitel 1) und Beziehungen zwischen diesen (Kapitel 2) geht es über den Zustand als Bindeglied (Kapitel 3) zu den Elementen der Verhaltensbeschreibung (Kapitel 4).

Frage: Wie kann man sich ein laufendes objektorientiertes Programm vorstellen?
Antwort: Ein laufendes objektorientiertes Programm kann man sich als eine Menge interagierender Objekte vorstellen. Diese Objekte sind miteinander verbunden und bilden ein Geflecht von Beziehungen. Das Geflecht ändert sich dynamisch durch die Interaktion der Objekte, wobei bestimmte statische Strukturen durch das Programm vorgegeben sind.

Frage: Warum ist die Unterscheidung zwischen Statik und Dynamik in der Programmierung wichtig?
Antwort: Die Unterscheidung zwischen Statik und Dynamik ist wichtig, um das Verhalten von Programmen zu verstehen. Programme haben eine statische Struktur, die ihre Komponenten und ihre Beziehungen zueinander beschreibt. Diese Struktur kann als Grundlage für die Ausführung des Programms dienen. Auf der anderen Seite ist die Ausführung eines Programms immer dynamisch und kann sich im Laufe der Zeit ändern. Die Unterscheidung hilft dabei, die Beziehung zwischen der Programmstruktur und ihrem Verhalten zu verstehen.

Frage: Wie kann die Unterscheidung zwischen Struktur und Verhalten in der objektorientierten Programmierung angewendet werden?
Antwort: In der objektorientierten Programmierung kann die Unterscheidung zwischen Struktur und Verhalten angewendet werden, um die verschiedenen Aspekte eines Programms zu analysieren und zu gestalten. Die Struktur bezieht sich auf das Objektgeflecht und die Beziehungen zwischen den Objekten. Das Verhalten bezieht sich auf die Spezifikation der Änderungen, die im Verlauf der Programmausführung auftreten. Diese Unterscheidung kann bei der Analyse und Gestaltung von Programmen hilfreich sein, da sie ermöglicht, sich auf die Struktur und das Verhalten von Objekten und Klassen zu konzentrieren und diese getrennt zu behandeln.