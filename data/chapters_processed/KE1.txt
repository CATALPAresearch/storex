Kurseinheit 1: Grundkonzepte der objektorientierten Programmierung

Ein laufendes objektorientiertes Programm muss man sich als eine Menge interagierender Objekte vorstellen. Damit die Objekte interagieren können, müssen sie verbunden sein; sie bilden dazu ein Geflecht, das neben Objekten aus Beziehungen zwischen diesen besteht. Das Geflecht verändert sich dynamisch infolge der Interaktion zwischen Objekten; es unterliegt aber gewissen, durch das Programm vorgegebenen statischen Strukturen. Die Unterscheidung zwischen Statik und Dynamik ist eine klassische der Programmierung. Während Programme traditionell statische Gebilde sind, die auf Papier oder in einem Nur-Lese-Speicher festgehalten werden können, ist ihre Ausführung immer etwas Dynamisches. Wenn aber Programme selbst als Daten aufgefasst werden, dann verwischt die Grenze zwischen Statik und Dynamik: Programme werden veränderlich. Insbesondere, wenn Programme sich selbst verändern können, ist die Unterscheidung zwischen Statik und Dynamik nur noch bedingt nützlich. Alternativ zu Statik und Dynamik kann man auch zwischen Struktur und Verhalten unterscheiden, wobei mit Struktur das oben erwähnte Objektgeflecht und mit Verhalten die (Spezifikation der) Folge seiner Veränderungen gemeint ist. Diese Unterscheidung liegt der Gliederung des Rests dieser Kurseinheit zugrunde: von Objekten (Kapitel 1) und Beziehungen zwischen diesen (Kapitel 2) geht es über den Zustand als Bindeglied (Kapitel 3) zu den Elementen der Verhaltensbeschreibung (Kapitel 4).

Frage: Was ist das Objektgeflecht in einem laufenden objektorientierten Programm?
Antwort: Das Objektgeflecht in einem laufenden objektorientierten Programm besteht aus Objekten und den Beziehungen zwischen diesen.

Frage: Was ist der Unterschied zwischen Statik und Dynamik in der Programmierung?
Antwort: In der Programmierung wird traditionell zwischen Statik und Dynamik unterschieden. Statik bezieht sich auf die statischen Strukturen eines Programms, die auf Papier oder in einem Nur-Lese-Speicher festgehalten werden können. Dynamik hingegen bezieht sich auf die Ausführung des Programms, die immer etwas Veränderliches ist. Wenn Programme selbst als Daten aufgefasst werden und sich sogar selbst verändern können, wird die Unterscheidung zwischen Statik und Dynamik nur noch bedingt nützlich. Alternativ kann man auch zwischen Struktur und Verhalten unterscheiden, wobei Struktur das Objektgeflecht und Verhalten die Folge seiner Veränderungen meint.
