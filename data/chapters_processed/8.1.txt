8.1 Konstruktoren

Mithilfe von Metaklassen lassen sich in SMALLTALK auf natürliche Art und Weise sogenannte Konstruktoren definieren. Ein Konstruktor ist eine Methode, die, wenn sie auf einer Klasse aufgerufen wird, eine neue Instanz dieser Klasse zurückgibt (es handelt sich also aus Sicht der Instanzen der Klasse um eine Klassenmethode). Wir haben bereits zwei Konstruktoren in SMALLTALK kennengelernt: Sie werden über die Selektoren "new" (für Objekte ohne indizierte Instanzvariablen) und "new:" (für Objekte mit indizierten Instanzvariablen) aufgerufen.

Frage: Was sind Konstruktoren in SMALLTALK?
Antwort: In SMALLTALK sind Konstruktoren Methoden, die, wenn sie auf einer Klasse aufgerufen werden, eine neue Instanz dieser Klasse erstellen und zurückgeben. Sie sind Klassenmethoden, die dazu dienen, neue Objekte zu erzeugen.

Da Klassen selbst Objekte sind, sind "new" und "new:" Instanzmethoden der Klassen. Dabei sind "basicNew" und "basicNew:" ebenfalls Instanzmethoden der Klasse, deren Implementierung allerdings primitiv ist. Sie geben eine neue Instanz (ein neues Objekt) der Klasse, auf der sie aufgerufen wurden, zurück. Da durch "basicNew" und "basicNew:" alle Instanzvariablen der erzeugten Objekte den Wert "nil" zugewiesen bekommen, wird auf den neuen Objekten vor ihrer Rückgabe die Methode "initialize" aufgerufen. "Initialize" ist eine Instanzmethode des neuen Objekts, die die Instanzvariablen je nach Klasse, in der die Methode definiert ist, anders belegt.

Frage: Was bewirken die Methoden "basicNew" und "basicNew:" in den Konstruktoren?
Antwort: Die Methoden "basicNew" und "basicNew:" sind Instanzmethoden der Klasse, die eine neue Instanz (ein neues Objekt) der Klasse erstellen und zurückgeben. Sie weisen allen Instanzvariablen der erzeugten Objekte den Wert "nil" zu. Bevor die Objekte zurückgegeben werden, wird die Methode "initialize" auf ihnen aufgerufen, um die Instanzvariablen je nach Klasse anders zu belegen.