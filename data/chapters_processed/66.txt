66 Der Bibliotheksgedanke

Ein Großteil des Erfolgs der objektorientierten Programmierung hängt von der Verfügbarkeit und der systematischen Verwendung von Bibliotheken ab. In SMALLTALK ist das selbstverständlich, da hier Sprache und Bibliothek praktisch nicht zu trennen sind. Aber auch in Java ist ein Teil der Sprachdefinition in bestimmte, spezielle Klassen wie "Object", "Thread" und "Throwable" verlagert. Auch kommt praktisch kein Java-Programm ohne die Verwendung bestimmter Bibliotheksklassen aus – man denke nur an die allgegenwärtige Verwendung des Collection-Frameworks, ohne das Programmierer zur ständigen Abfassung ewig gleichen Codes verdammt wären.


Frage: Warum sind Bibliotheken wichtig für die objektorientierte Programmierung?
Antwort: Bibliotheken sind wichtig für die objektorientierte Programmierung, da sie einen Großteil des Erfolgs ausmachen. Sie enthalten wiederverwendbare Klassen und Methoden, die die Entwicklung von Programmen erleichtern und beschleunigen. In SMALLTALK sind Sprache und Bibliothek praktisch nicht zu trennen, während in Java ein Teil der Sprachdefinition in bestimmte Klassen verlagert ist. Auch wird praktisch kein Java-Programm ohne die Verwendung bestimmter Bibliotheksklassen auskommen.

Frage: Warum hängt der Erfolg der objektorientierten Programmierung von der Verfügbarkeit und systematischen Verwendung von Bibliotheken ab?
Antwort: Der Erfolg der objektorientierten Programmierung hängt von der Verfügbarkeit und systematischen Verwendung von Bibliotheken ab, weil sie wiederverwendbaren Code bereitstellen, der die Entwicklungszeit verkürzt und die Fehleranfälligkeit reduziert. Sie ermöglichen es den Programmierern, auf bereits getesteten und bewährten Funktionen zurückzugreifen, anstatt das Rad immer wieder neu zu erfinden. In Smalltalk ist dies besonders ausgeprägt, da Sprache und Bibliothek praktisch nicht zu trennen sind. Auch in Java ist ein Teil der Sprachdefinition in bestimmte, spezielle Klassen verlagert und ein Großteil der Programme verwenden bestimmte Bibliotheksklassen, wie das Collection-Framework.


Zum objektorientierten Programmierstil gehört es, eine Lösung eines konkreten Problems möglichst umfassend aus existierenden, idealerweise verbreiteten und bewährten Bibliotheken zusammenzustellen. Jede nicht selbst geschriebene Programmzeile ist ein Gewinn, jede Implementierung einer noch so kleinen Funktion, die es bereits in irgendeiner Bibliothek gibt, ist ein Verlust. Dabei sind die Vorteile der Verwendung von Bibliotheken mannigfaltig: In der Regel können Sie davon ausgehen, dass die Implementierungen korrekt sind (und Probleme sowie Sonderfälle berücksichtigen, an die Sie im Traum nicht gedacht hätten), die Wartung und Anpassung übernehmen andere für Sie, und nicht zuletzt dürfen Sie bei weit verbreiteten Bibliotheken voraussetzen, dass deren Funktionalität auch anderen Programmierern bekannt ist, sodass die Verwendung einer Bibliotheksklasse keiner weiteren Erklärung bedarf. Ihr eigener Beitrag wird dadurch klein und überschaubar, was man Ihnen in keinem Fall als Faulheit oder Arbeitsverweigerung auslegen sollte, sondern als wahre Größe: Sie kennen das Werk anderer, Sie wissen es zu schätzen und zu nutzen.


Frage: Warum ist es vorteilhaft, existierende Bibliotheken in der objektorientierten Programmierung zu verwenden?
Antwort: Es ist vorteilhaft, existierende Bibliotheken in der objektorientierten Programmierung zu verwenden, da die Implementierungen in der Regel korrekt sind, die Wartung und Anpassung übernommen wird, die Funktionalität bekannt ist und die eigene Arbeit klein und überschaubar bleibt.
