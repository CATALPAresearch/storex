52.3 Anweisungen

In EIFFEL bestehen Anweisungen aus Zuweisungen, Methodenaufrufen, Konstruktoraufrufen (der Umgang mit Konstruktoren in EIFFEL unterscheidet sich erheblich von dem in SMALLTALK und auch von dem in Java/C-Sharp/C++; hierauf wird jedoch nicht weiter eingegangen) sowie den üblichen Kontrollstrukturen zur Verzweigung und Wiederholung. EIFFEL hält sich strikt an die Prinzipien strukturierter Programmierung, was bedeutet, dass jede Kontrollstruktur genau einen Eingang und einen Ausgang hat. In der Praxis kann dies lästig sein, zu sehr ausgedehnten Programmen führen und dürfte ein Grund für die geringe Akzeptanz von EIFFEL unter professionellen Programmierern sein. Trotzdem bietet EIFFEL ein Exception Handling, das sich angenehm von dem in Java/C-Sharp/C++ unterscheidet (insbesondere erlaubt es ein "Retry", also das Wiederholen eines fehlgeschlagenen Versuchs, während dies in anderen Sprachen durch Codiermuster umgesetzt werden muss). Auf Einzelheiten des Exception Handling in EIFFEL wird hier jedoch nicht eingegangen, da es nur begrenzt mit der Objektorientierung zu tun hat.


Frage: Was sind die Anweisungen in EIFFEL?
Antwort: In EIFFEL bestehen Anweisungen aus Zuweisungen, Methodenaufrufen, Konstruktoraufrufen und den üblichen Kontrollstrukturen zur Verzweigung und Wiederholung. Jede Kontrollstruktur hat genau einen Eingang und einen Ausgang. EIFFEL bietet ein Exception Handling, das sich angenehm von dem in Java/C-Sharp/C++ unterscheidet.

Frage: Was sind die Bestandteile einer Anweisung in EIFFEL?
Antwort: In EIFFEL bestehen Anweisungen aus Zuweisungen, Methodenaufrufen, Konstruktoraufrufen und den üblichen Kontrollstrukturen zur Verzweigung und Wiederholung. Jede Kontrollstruktur hat genau einen Eingang und einen Ausgang. EIFFEL bietet ein Exception Handling, das sich angenehm von dem in Java/C-Sharp/C++ unterscheidet.


In EIFFEL, ähnlich wie in PASCAL, dient das Semikolon als Trennzeichen und ist kein Bestandteil einer Anweisung. Darüber hinaus kann es am Ende einer Zeile auch weggelassen werden. Kleine EIFFEL-Programme wirken daher optisch aufgeräumt, und aufgrund des Verzichts auf Blöcke außerhalb von Kontrollstrukturen - es gibt weder { ... } noch "begin ... end" - wirken große Programme jedoch schnell aufgebläht.


Frage: Wie wird das Semikolon in EIFFEL verwendet?
Antwort: Im Gegensatz zu anderen Programmiersprachen dient das Semikolon in EIFFEL nicht als Ende einer Anweisung, sondern als Trennzeichen zwischen Anweisungen. Es kann am Ende einer Zeile weggelassen werden.
