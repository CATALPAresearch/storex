52.5.1 Ein motivierendes Beispiel

MEYERs klassisches Beispiel zur Motivation kovarianter Redefinition und verankerter Typen à la EIFFEL soll Ihnen hier nicht vorenthalten werden. Es wird immer wieder zitiert und ist, abgesehen davon, dass es zu Bemerkungen abseits der Informatik einlädt, intuitiv gut verständlich. Das Beispiel beginnt wie folgt:
Die Idee ist, dass jugendliche Skifahrerinnen sich zu zweit ein Zimmer teilen. Wie Sie vielleicht schon selbst bemerkt haben, ist der durch die Klasse "Skier" definierte Typ rekursiv: Seine Instanzvariable "roommate" ist selbst vom Typ "Skier".
Zwei Dinge fallen auf: Zum einen unterscheiden sich die beiden Subklassen lediglich darin, dass sie "roommate" einen anderen Typ zuordnen und dies in der Folge auch für den Parameter von "share" tun müssen.
Beim Funktionsaufruf von "share" wird nun aber, dank dynamischer Bindung, "g1" (und damit ein Objekt vom Typ "GIRL") an "roommate" in "BOY" und damit an eine Variable vom Typ "BOY" zugewiesen. Schon ist das Programm nicht mehr typkorrekt.
Naturgemäß kommt in EIFFEL dem Versuch der Reparatur des durch obiges Beispiel angedeuteten Verlusts der Typkorrektheit eine besondere Bedeutung zu. Hier sei nur noch schnell (und ohne etwas von der Lösung vorwegzunehmen) erwähnt, dass der eigentliche Fehler in der implizit angenommenen Allquantifizierung einer Deklaration wie "SKIER.share(SKIER)" (oder, mathematisch ausgedrückt, "share : SKIER  SKIER") liegt: Wie schon in Kurseinheit 3, Kapitel 26 erwähnt, bedeutet eine solche Deklaration eben nicht, dass alle Skifahrerinnen (beiden Geschlechts) ihr Zimmer mit allen Skifahrerinnen (wieder beiden Geschlechts) teilen können. Das ist aber auch schon unabhängig von den möglichen Geschlechtern (Subklassen) nicht der Fall: Wenn eine Skifahrerin beispielsweise vorübergehend ansteckend erkrankt ist, kann sie höchstens mit anderen Kranken das Zimmer teilen. Eine Klassifikation nach Kranken und Gesunden entzieht sich aber, da sie nicht dauerhaft ist, den Möglichkeiten der statischen Typisierung (zumindest den offensichtlichen).

Frage: Warum wird in EIFFEL eine kovariante Redefinition benötigt?
Antwort: In EIFFEL wird eine kovariante Redefinition benötigt, um die Unterkunft der jungen Skifahrerinnen nach Geschlechtern getrennt zu organisieren. Dies ermöglicht es, Mädchen und Jungen unterschiedliche Typen für "roommate" zuzuweisen.

Frage: Welche Schwierigkeit ergibt sich aus der kovarianten Redefinition?
Antwort: Durch die kovariante Redefinition wird bei einem Funktionsaufruf von "share" dynamische Bindung verwendet, was dazu führt, dass ein Objekt vom Typ "GIRL" einem "BOY" zugewiesen wird. Dies führt zu einem Programmfehler, da das Programm nicht mehr typkorrekt ist.

Frage: Warum führt die implizite Allquantifizierung einer Deklaration zu einem Fehler?
Antwort: Die implizite Allquantifizierung einer Deklaration wie "SKIER.share(SKIER)" bedeutet nicht, dass alle Skifahrerinnen (beider Geschlechter) ihr Zimmer mit allen Skifahrerinnen teilen können. Dies ist aufgrund von Faktoren wie Krankheit nicht immer möglich. Die statische Typisierung kann solche situativen Unterschiede nicht abbilden.