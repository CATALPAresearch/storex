43.6 Generische Variablen

Schließlich ist es in Java auch noch möglich, Variablen generisch zu deklarieren, ohne dass die in der Variablendeklaration verwendete Typvariable bereits von einer umschließenden Methode oder Klasse eingeführt worden wäre. Allerdings geht das, da eine Variable anders als eine Klasse oder Methoden keinen neuen Sichtbarkeitsbereich definiert, nur mit anonymen Typvariablen, also Wildcards. Man beachte jedoch, dass eine solche Variablendeklaration, genau wie eine generische Methodendefinition, keinen neuen Typ einführt (siehe Fußnote 72); vielmehr handelt es sich bei dem durch ein Typ-Wildcard als tatsächlichen Parameter eingesetzten Typ selbst um einen konkreten Typ. Der per "Wildcard" deklarierten Variable "liste" können also Listen beliebigen Elementtyps zugewiesen werden, einfach weil "List<?>" (unter den in Abschnitt 43.2 genannten Einschränkungen) Supertyp aller Instanziierungen von "List<T>" ist.


Frage: Was bedeutet es, Variablen generisch zu deklarieren?
Antwort: In Java ist es möglich, Variablen generisch zu deklarieren, ohne dass die in der Variablendeklaration verwendete Typvariable bereits von einer umschließenden Methode oder Klasse eingeführt worden wäre. Dies ist jedoch nur mit anonymen Typvariablen, also Wildcards, möglich. Eine solche Variablendeklaration führt keinen neuen Typ ein, sondern die per "Wildcard" deklarierte Variable kann Listen beliebigen Elementtyps zugewiesen werden, weil "List<>" Supertyp aller Instanziierungen von "List<T>" ist.

Frage: Was ist der Zweck von generischen Variablen in Java?
Antwort: Der Zweck von generischen Variablen in Java ist es, Variablen zu deklarieren, ohne dass die in der Variablendeklaration verwendete Typvariable bereits von einer umschließenden Methode oder Klasse eingeführt worden wäre. Dies ist möglich, da eine Variable keinen neuen Sichtbarkeitsbereich definiert, jedoch nur mit anonymen Typvariablen, also Wildcards. Der per "Wildcard" deklarierten Variable können also Listen beliebigen Elementtyps zugewiesen werden, weil "List<?>" Supertyp aller Instanziierungen von "List<T>" ist.
