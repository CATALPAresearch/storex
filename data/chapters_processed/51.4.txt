51.4 Mehrfachvererbung

Getreu seinem Motto, alle Freiheit in die Hand der Programmiererin zu legen und ihr nicht mit einer gouvernantenhaften "Du-kannst-das-bestimmt-nicht"-Attitüde zu begegnen, bietet C++ (im Gegensatz zu SMALLTALK, Java und C-Sharp) uneingeschränkte Mehrfachvererbung. Das kann aus verschiedenen Gründen sinnvoll erscheinen: Eine Klasse, die von mehreren vollständig abstrakten (also mit keinerlei Implementierung versehenen) Klassen erbt, implementiert damit faktisch mehrere Interfaces. Der einzige Nachteil ist, dass die Programmiererin nicht in Mitteln der Sprache ausdrücken kann, ob eine abstrakte Klasse die Funktion eines Interfaces oder die einer Generalisierung (von der man Implementierung erben kann; vgl. Abschnitt 9.1) haben soll – dazu sind dann schon Namenskonventionen notwendig. Nicht selten ergibt sich aus der Aufgabenstellung, dass eine Klasse Eigenschaften von mehreren anderen gebrauchen könnte. In Sprachen mit Einfachvererbung muss man sich dann für eine Klasse als Superklasse entscheiden und den Beitrag der anderen Klassen wiederholen, also erneut implementieren oder per Delegation bzw. Forwarding einbinden. Mehrfachvererbung erlaubt im Gegensatz dazu, sich alles zusammenzuerben, was man benötigt.


Frage: Was ist der Unterschied zwischen Mehrfachvererbung und Einfachvererbung?
Antwort: Im Gegensatz zur Einfachvererbung, bei der eine Klasse nur eine Superklasse haben kann, erlaubt Mehrfachvererbung, dass eine Klasse von mehreren Superklassen erbt.


Da das Erben jedoch nicht selektiv (im Sinne, dass man sich aussuchen könnte, was man von einer Klasse erbt) erfolgt und das Löschen von geerbten Membern in C++ nicht möglich ist, fühlt man sich häufig bemüßigt, die Klassen, von denen man erbt, in viele kleine Teile aufzusplitten und nur die zu beerben, deren Eigenschaften man braucht, um sich von unnötigem Ballast freizuhalten. Mehrfachvererbung ist etwas, das sich Programmiererinnen gerne wünschen. Sie bringt jedoch einige praktische Probleme mit sich, unter anderem die Frage, was zu tun ist, wenn eine Klasse von mehreren anderen Klassen verschiedene Definitionen desselben Elements (Feld oder Methode) erbt. Da die Klasse sich dann für eine der beiden Definitionen entscheiden muss, geht die der anderen verloren. Dies kann, insbesondere im Zusammenhang mit dynamischem Binden und offener Rekursion, zu unerwartetem Verhalten führen. Darüber hinaus führt die Mehrfachvererbung noch zu zahlreichen weiteren Problemen, die hier nicht weiter ausgeführt werden sollen.


Frage: Was ist Mehrfachvererbung?
Antwort: Mehrfachvererbung ist eine Konstruktion in der objektorientierten Programmierung, bei der eine Klasse von mehreren anderen Klassen erben kann. Sie wird häufig von Programmiererinnen gewünscht, bringt aber praktische Probleme mit sich, wie zum Beispiel die Frage, was zu tun ist, wenn eine Klasse von mehreren anderen Klassen verschiedene Definitionen desselben Elements erbt.

Frage: Welche Probleme bringt Mehrfachvererbung mit sich?
Antwort: Mehrfachvererbung bringt einige praktische Probleme mit sich, wie zum Beispiel die Frage, was zu tun ist, wenn eine Klasse von mehreren anderen Klassen verschiedene Definitionen desselben Elements (Feld oder Methode) erbt. Darüber hinaus führt die Mehrfachvererbung noch zu zahlreichen weiteren Problemen, wie zum Beispiel das unerwartete Verhalten im Zusammenhang mit dynamischem Binden und offener Rekursion.
