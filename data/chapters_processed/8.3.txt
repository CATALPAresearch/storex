8.3 Factory-Methoden

In SMALLTALK sind Konstruktoren ganz normale Klassenmethoden und daher an keine besonderen Konventionen gebunden. Insbesondere müssen sie nicht zwingend ein neues Objekt genau der Klasse zurückgeben, zu der sie gehören. Dies ermöglicht die Verwendung sogenannter Factory-Methoden.


Frage: Was sind Konstruktoren in SMALLTALK?
Antwort: In SMALLTALK sind Konstruktoren ganz normale Klassenmethoden und daher an keine besonderen Konventionen gebunden. Sie können ein neues Objekt genau der Klasse zurückgeben, zu der sie gehören, aber auch nicht zwingend. Das ermöglicht die Verwendung sogenannter Factory-Methoden.

Frage: Was sind Factory-Methoden?
Antwort: Factory-Methoden sind Methoden, die ein Objekt zurückgeben, das nicht unbedingt zur Klasse gehört, zu der die Methode gehört.

Frage: Wozu dienen Factory-Methoden?
Antwort: Factory-Methoden dienen dazu, Objekte zu erzeugen und zurückzugeben, die nicht unbedingt zur Klasse gehören, zu der die Methode gehört. Das ermöglicht eine flexiblere Objektinitialisierung.

Frage: Was sind Factory-Methoden in SMALLTALK?
Antwort: Factory-Methoden sind Konstruktoren in SMALLTALK, die nicht zwingend ein neues Objekt genau der Klasse zurückgeben, zu der sie gehören. Sie sind ganz normale Klassenmethoden und daher nicht an besondere Konventionen gebunden.


Eine Factory-Methode ist eine Methode, die ähnlich wie ein Konstruktor eine neue Instanz liefert. Allerdings macht sie die Klasse der Instanz von anderen Faktoren als nur der Klasse, zu der die Methode gehört, abhängig. Zum Beispiel könnte eine Klasse "Number" eine Klassenmethode "fromString:" bereitstellen, die anhand eines zu analysierenden Strings entweder eine Instanz der Klasse "Integer" oder eine Instanz der Klasse "Float" zurückgibt. Die Implementierung solcher Factory-Methoden ist in SMALLTALK einfach möglich und sie unterscheiden sich formal nicht von Konstruktoren – es handelt sich einfach um Klassenmethoden.


Frage: Was ist eine Factory-Methode?
Antwort: Eine Factory-Methode ist eine Methode, die eine neue Instanz liefert und die Klasse der Instanz von anderen Faktoren als nur der Klasse, zu der die Methode gehört, abhängig macht. In SMALLTALK sind Factory-Methoden einfach zu implementieren und unterscheiden sich formal nicht von Konstruktoren – es handelt sich einfach um Klassenmethoden.

Frage: Was ist eine Factory-Methode und wie unterscheidet sie sich von Konstruktoren?
Antwort: Eine Factory-Methode ist eine Methode, die eine neue Instanz liefert, ähnlich wie ein Konstruktor. Der Unterschied liegt darin, dass die Klasse der Instanz von anderen Faktoren als nur der Klasse, zu der die Methode gehört, abhängig gemacht wird. In SMALLTALK sind Factory-Methoden einfach zu implementieren und unterscheiden sich formal nicht von Konstruktoren, da es sich einfach um Klassenmethoden handelt.


Diese Factory-Methode "fromString:" in der Klasse "Number" analysiert den übergebenen String. Wenn der Parameter "aString" einen Dezimalpunkt enthält, wird eine neue Fließkommazahl zurückgegeben (mittels der Methode "asFloat", die in der Klasse "String" implementiert ist und eine Instanz der Klasse "Float" zurückliefert). Andernfalls wird eine Ganzzahl zurückgegeben. Diese Art von Factory-Methoden ermöglicht eine flexible Instanziierung von Objekten abhängig von den gegebenen Eingaben.

Frage: Wie funktionieren Factory-Methoden?
Antwort: Factory-Methoden sind statische Methoden, die eine Instanz einer bestimmten Unterklasse erzeugen und zurückgeben, anstatt die Instanz direkt zu instanziieren. Sie entscheiden dynamisch, welche Unterklasse instanziiert werden soll, abhängig von den gegebenen Eingaben. Dadurch können sie die richtige Instanzklasse auswählen und eine Instanz dieser Klasse zurückgeben, ohne dass der Aufrufer sich um die Details der Instanziierung kümmern muss.
