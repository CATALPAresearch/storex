62.2 Namenskonventionen

Häufig findet man in einzelnen Projekten und nicht selten in ganzen Firmen Namenskonventionen vor, an die sich alle halten sollten. Namenskonventionen erleichtern nicht nur die Bezeichnerwahl. Indem die Programmiererin sich an bestimmte Regeln halten kann, wird ihre schöpferische Freiheit eingeschränkt, was man durchaus auch als Entlastung empfinden kann. Sie erleichtern auch das Lesen, weil die Leserin, die die Konventionen kennt, die Bedeutung des Bezeichners bzw. des dahinterstehenden Programmelements leichter entschlüsseln kann und sich somit schneller zurechtfindet. Allerdings ist es dazu notwendig, dass die Namenskonventionen genau festgeschrieben sind und dass sich alle darauf einigen. Wenn nämlich jede ihre individuelle Auslegung der Regel hat, dann kann eine (vermeintliche) Namenskonvention mehr Verwirrung stiften als nutzen. "It would be a mistake to protest against the rules … on the grounds that they limit developer creativity. A consistent style favors rather than hampers creativity by channeling it to where it matters. A large part of the effort of producing software is spent reading existing software and making others read what is being written. Individual vagaries benefit no one; common conventions help everyone." - Bertrand Meyer


Frage: Wozu dienen Namenskonventionen?
Antwort: Namenskonventionen erleichtern die Bezeichnerwahl, indem sie die schöpferische Freiheit der Programmiererin einschränken und das Lesen von Code, indem sie die Bedeutung des Bezeichners bzw. des dahinterstehenden Programmelements leichter entschlüsseln.

Frage: Was ist die Bedeutung von einheitlichen Stilrichtlinien in der Softwareentwicklung?
Antwort: Einheitliche Stilrichtlinien in der Softwareentwicklung fördern die Kreativität, indem sie die Kreativität auf das Wesentliche konzentrieren. Ein großer Teil der Softwareentwicklung besteht darin, bestehenden Code zu lesen und sicherzustellen, dass der geschriebene Code für andere leicht lesbar ist. Individuelle Eigenheiten sind niemandem von Nutzen, während gemeinsame Konventionen allen helfen.

Frage: Warum sind gemeinsame Konventionen in der Softwareentwicklung wichtig?
Antwort: Gemeinsame Konventionen in der Softwareentwicklung sind wichtig, weil ein großer Teil des Aufwands bei der Softwareentwicklung darin besteht, bestehende Software zu lesen und sicherzustellen, dass andere das Geschriebene leicht verstehen können. Individuelle Eigenheiten sind nicht hilfreich, während gemeinsame Konventionen allen Entwicklern helfen.
