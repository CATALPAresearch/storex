13 Programmieren mit Collections

Wir waren bereits auf Zu-n-Beziehungen eingegangen, die logisch gleichberechtigt neben Zu-1-Beziehungen stehen, die aber in der Umsetzung besonderer Mechanismen bedürfen. Als Basis der Umsetzung hatten Sie bereits Zwischenobjekte kennengelernt, die über ihre indizierten Instanzvariablen solche Beziehungen — wenn auch nur indirekt — herstellen können. Tatsächlich könnte man, wenn man sich der Häufigkeit des Vorkommens von Zu-n-Beziehungen in der Programmierung bewusst ist, vermuten, dass indizierte Instanzvariablen speziell für diesen Zweck eingeführt wurden. Auf den ersten Blick bedauerlich ist nur, dass dafür eben diese Zwischenobjekte notwendig sind.


Frage: Wofür werden indizierte Instanzvariablen verwendet?
Antwort: Indizierte Instanzvariablen werden verwendet, um Zu-n-Beziehungen zwischen Objekten herzustellen. Sie sind speziell für diesen Zweck eingeführt worden, um die Häufigkeit des Vorkommens von Zu-n-Beziehungen in der Programmierung zu unterstützen.

Frage: Was sind Zu-n-Beziehungen und wie werden sie umgesetzt?
Antwort: Zu-n-Beziehungen sind logisch gleichberechtigt neben Zu-1-Beziehungen, die aber in der Umsetzung besonderer Mechanismen bedürfen. Sie werden durch indizierte Instanzvariablen umgesetzt, die über Zwischenobjekte solche Beziehungen herstellen. Diese Zwischenobjekte sind notwendig, um Zu-n-Beziehungen in der Programmierung umzusetzen.


Es ergibt sich aus diesem Umstand aber auch ein entscheidender Vorteil. Da auch diese Zwischenobjekte Instanzen von Klassen sein müssen, ist es möglich, verschiedene Arten von Zu-n-Beziehungen zu definieren und diese jeweils mit Verhalten zu versehen, das speziell auf die Art der Beziehung bezogen ist. So ist es beispielsweise möglich, Zu-n-Beziehungen zu definieren, deren Elemente (die in Beziehung stehenden Objekte) jeweils nur einmal darin vorkommen dürfen (mengenwertige Beziehungen) oder nach einem bestimmten Kriterium sortiert sind. Auch können Operationen wie das Hinzufügen oder Entfernen von Objekten zu einer Beziehung, die bei Zu-1-Beziehungen über die Zuweisung zu einer Instanzvariable erfolgen (das Entfernen durch Zuweisung von nil), beliebig ausgestaltet werden, um beispielsweise die Mengenwertigkeit oder die Sortierung zu erhalten.


Frage: Was ist der Vorteil von Zu-n-Beziehungen in der objektorientierten Programmierung?
Antwort: Der Vorteil von Zu-n-Beziehungen in der objektorientierten Programmierung ist, dass verschiedene Arten von Zu-n-Beziehungen definiert werden können, die jeweils mit Verhalten versehen sind, das speziell auf die Art der Beziehung bezogen ist. So können Operationen wie das Hinzufügen oder Entfernen von Objekten zu einer Beziehung beliebig ausgestaltet werden, um beispielsweise die Mengenwertigkeit oder die Sortierung zu erhalten.

Frage: Was ist eine Zu-n-Beziehung?
Antwort: Eine Zu-n-Beziehung ist eine Beziehung, die definiert, wie sich ein Objekt auf eine Gruppe von anderen Objekten bezieht. Diese Beziehung kann mit Verhalten versehen werden, das speziell auf die Art der Beziehung bezogen ist, wie zum Beispiel das Hinzufügen oder Entfernen von Objekten zu einer Beziehung, die Sortierung oder die Mengenwertigkeit.


Besonders attraktiv ist jedoch die in SMALLTALK bestehende Möglichkeit, eigene Kontrollstrukturen für Zu-n-Beziehungen zu spezifizieren. Die Standarditeratoren haben je nach Art der Beziehung unterschiedliche Eigenschaften. Außerdem ist es natürlich möglich, mit eigenen Arten von Beziehungen auch spezielle, nur für diese Beziehungen benötigte Kontrollstrukturen zu spezifizieren.


Frage: Was ist eine Möglichkeit in SMALLTALK, eigene Kontrollstrukturen für Zu-n-Beziehungen zu spezifizieren?
Antwort: In SMALLTALK ist es möglich, eigene Kontrollstrukturen für Zu-n-Beziehungen zu spezifizieren, indem man eigene Arten von Beziehungen definiert und für diese spezielle Kontrollstrukturen spezifiziert.
