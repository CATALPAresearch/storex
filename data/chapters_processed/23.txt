23 Typerweiterung

Wie bereits in Kapitel 21 angedeutet, verlangt die Zuweisungskompatibilität nicht unbedingt Typäquivalenz. Tatsächlich reicht es aus, bei einer rein strukturellen (syntaktischen) Betrachtung, dass der Typ der rechten Seite einer Zuweisung das Protokoll (die Menge der Methoden) des Typs der linken Seite enthält, um in der Folge Typfehler zu vermeiden. Anders ausgedrückt: Der Typ auf der rechten Seite einer Zuweisung darf eine Erweiterung dessen auf der linken Seite um zusätzliche Methoden sein.
Die sogenannte Typerweiterung (engl. type extension; "extension" hier im Sinne von Erweiterung und nicht im Sinne der Ausdehnung als Gegenstück zur Intension), wie sie z. B. in den Programmiersprachen MODULA-3 und OBERON (beides Nachfolger von PASCAL) Verwendung findet, sieht genau dies vor.
Der erweiternde Typ, hier InternationalesBüro, wird also relativ zu einem bereits bestehenden, dem erweiterten Typ (hier Büro), definiert. Die Methodendeklarationen des erweiterten Typs werden dabei gewissermaßen an den erweiternden Typ vererbt; dieser braucht sie also nicht noch einmal zu wiederholen.
Wie man nun leicht einsieht, können Variablen, deren deklarierter Typ Büro ist, auch Objekte vom Typ InternationalesBüro enthalten, ohne dass dies zu Typfehlern führt, da alle Methoden, die für Büro vorgesehen sind, auch in InternationalesBüro vorkommen. Das Umgekehrte ist jedoch nicht der Fall: Wenn man einer Variable vom Typ InternationalesBüro ein Objekt vom Typ Büro zuweisen könnte, dann hätte man immer dann ein Problem, wenn man über diese Variable auf dessen Methoden zum Länderkennzeichen zugreifen wollte, weil diese schlichtweg für das Objekt nicht definiert sind. Die Zuweisungskompatibilität unter Typerweiterung regelt der Begriff der Typkonformität.

Frage: Welche Anforderungen müssen erfüllt sein, um Typfehler bei Zuweisungen zu vermeiden?
Antwort: Um Typfehler bei Zuweisungen zu vermeiden, ist es ausreichend, dass der Typ auf der rechten Seite einer Zuweisung das Protokoll (die Menge der Methoden) des Typs auf der linken Seite enthält.

Frage: Was ist Typerweiterung, und in welchen Programmiersprachen wird sie verwendet?
Antwort: Typerweiterung (englisch: type extension) erlaubt, dass der Typ auf der rechten Seite einer Zuweisung eine Erweiterung des Typs auf der linken Seite um zusätzliche Methoden ist. Sie wird in Programmiersprachen wie MODULA-3 und OBERON verwendet.

Frage: Wie wird Typerweiterung in Bezug auf bereits existierende Typen definiert?
Antwort: Typerweiterung definiert einen neuen Typ relativ zu einem bereits bestehenden, dem erweiterten Typ. Die Methodendeklarationen des erweiterten Typs werden an den erweiternden Typ vererbt, sodass sie nicht erneut deklariert werden müssen.

Frage: Was bedeutet Typkonformität in Bezug auf Typerweiterung?
Antwort: Typkonformität regelt die Zuweisungskompatibilität unter Typerweiterung. Es bedeutet, dass Variablen, deren deklarierter Typ ein erweiterter Typ ist, auch Objekte des ursprünglichen Typs enthalten können, ohne zu Typfehlern zu führen. Die umgekehrte Zuweisung, bei der ein Objekt des ursprünglichen Typs einer Variable mit dem erweiterten Typ zugewiesen wird, kann jedoch Probleme verursachen, wenn auf Methoden des erweiterten Typs zugegriffen wird, die für das Objekt nicht definiert sind.