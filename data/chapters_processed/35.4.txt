35.4 Operationen und Methoden

Einhergehend mit der Trennung zwischen primitiven und Referenztypen gibt es in JAVA auch eine Trennung zwischen Operationen und Methoden: Auf den primitiven Typen sind bestimmte Operationen, wie mathematische und boolesche Operationen, fest vorgegeben, wie es die Sprachdefinition vorsieht. Alle anderen Operationen müssen als Methoden in Klassen definiert werden. Da primitive Typen jedoch keine Klassen sind, gibt es beispielsweise für mathematische Funktionen eine spezielle Klasse namens Math, in der Funktionen wie sin(.) als Klassenmethoden hinterlegt sind. Umgekehrt ist es Klassendefinitionen nicht gestattet, Operatoren zu definieren, wie es bei den binären Methoden in SMALLTALK der Fall ist (siehe Abschnitt 4.1.2 in Kurseinheit 1). Die klare Trennung zwischen primitiven und Referenztypen ist konsequent durchgezogen, was den Charakter von JAVA als Programmiersprache geprägt hat. Anfangs führte dies zu ihrem Ruf als hybride Programmiersprache, die sowohl objektorientierte als auch imperative Eigenschaften aufweist. Aus meiner Sicht ist die Unterscheidung zwischen Objekten und Werten, wie sie in JAVA vorgenommen wurde, jedoch sinnvoll: Werte besitzen weder Identität noch Zustand, daher unterscheiden sie sich von Objekten.
Die Methoden in JAVA können in Prozeduren und Funktionen unterteilt werden, wobei der einzige Unterschied darin besteht, dass Prozeduren keine Rückgabewerte haben und daher den Rückgabetyp "void" deklarieren. Dies ist eine der vielen Erbschaften aus der Programmiersprache C.
Ein Operator, der speziell für Referenztypen in JAVA zur Verfügung steht, ist der Typtest "instanceof". Er ermöglicht es zu überprüfen, ob ein Objekt eine Instanz eines bestimmten Typs ist. Dabei wird nicht zwischen direkten und indirekten Instanzen unterschieden. Zum Beispiel ergibt "x instanceof Object" immer "true", unabhängig davon, für welches Objekt "x" steht. Weitere Informationen zur Bedeutung des Typtests finden Sie in Kapitel 44.

Frage: Welche Trennung gibt es in JAVA zwischen Operationen und Methoden?
Antwort: In JAVA gibt es eine Trennung zwischen Operationen, die auf primitiven Typen fest vorgegeben sind, und Methoden, die in Klassen definiert werden müssen.

Frage: Warum gibt es für mathematische Funktionen in JAVA die spezielle Klasse Math?
Antwort: Die primitiven Typen in JAVA sind keine Klassen, daher werden mathematische Funktionen wie sin(.) in der speziellen Klasse Math als Klassenmethoden definiert.

Frage: Können Klassendefinitionen in JAVA Operatoren definieren?
Antwort: Nein, in JAVA ist es Klassendefinitionen nicht gestattet, Operatoren zu definieren wie es bei den binären Methoden in SMALLTALK der Fall ist.

Frage: Was ist der Unterschied zwischen Prozeduren und Funktionen in JAVA?
Antwort: In JAVA können Methoden in Prozeduren und Funktionen unterteilt werden. Der einzige Unterschied besteht darin, dass Prozeduren keine Rückgabewerte haben und daher den Rückgabetyp "void" deklarieren.

Frage: Welcher Operator steht speziell für Referenztypen in JAVA zur Verfügung?
Antwort: Ein Operator, der speziell für Referenztypen in JAVA zur Verfügung steht, ist der Typtest "instanceof". Er ermöglicht es zu überprüfen, ob ein Objekt eine Instanz eines bestimmten Typs ist.