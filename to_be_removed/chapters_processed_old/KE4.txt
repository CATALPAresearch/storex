Kurseinheit 4: JAVA

Da die meisten von Ihnen wahrscheinlich nie beruflich mit SMALLTALK programmieren werden, werden wir uns in dieser und der nächsten Kurseinheit anderen objektorientierten Programmiersprachen zuwenden. Dabei wird JAVA den größten Raum einnehmen. Einerseits ist JAVA immer noch die am weitesten verbreitete objektorientierte Programmiersprache, und andererseits erlaubt es viele Parallelen zu SMALLTALK, was eine gute Brücke zu anderen Programmiersprachen schafft. Aus theoretischer Sicht nimmt JAVA jedoch keine besondere Position ein, und sein Erfolg war wahrscheinlich eher auf das Internet zurückzuführen (JAVA hatte zuvor die Rolle, die heute JAVASCRIPT hat), als auf ein besonders geniales Sprachdesign.
Aus der Ferne betrachtet ist JAVA eine Mischung aus SMALLTALK und C++. Von C++ wurden weite Teile der Syntax und der statischen Typüberprüfung übernommen sowie der eher klassisch prozedurale Charakter (Methodenaufrufe anstelle von Nachrichtenversand). Von SMALLTALK übernahm es die umfassende Objektorientierung (es gibt keinen Code außerhalb von Klassen), die Einfachvererbung sowie die Garbage Collection (um nur die wichtigsten Punkte zu nennen). Wenn Sie jedoch genauer verstehen möchten, was JAVA ist und warum es so ist, wie es ist, sollten Sie einen Blick in seine Geschichte werfen. Ich empfehle dringend, "The Long Strange Trip to JAVA" von PATRICK NAUGHTON zu lesen; danach wird Ihnen wahrscheinlich einiges klarer sein.

Frage: Warum wird in den kommenden Kurseinheiten JAVA behandelt?
Antwort: In den kommenden Kurseinheiten wird JAVA behandelt, da es immer noch die am weitesten verbreitete objektorientierte Programmiersprache ist und viele Parallelen zu SMALLTALK aufweist, was den Übergang zu anderen Programmiersprachen erleichtert. Es ist jedoch wichtig zu beachten, dass JAVA aus theoretischer Sicht keine besondere Position einnimmt, und sein Erfolg war wahrscheinlich eher auf das Internet zurückzuführen.

Frage: Welche Merkmale von C++ und SMALLTALK wurden in JAVA übernommen?
Antwort: In JAVA wurden weite Teile der Syntax und der statischen Typüberprüfung von C++ übernommen. Außerdem wurde der eher klassisch prozedurale Charakter von C++ beibehalten, wobei Methodenaufrufe anstelle von Nachrichtenversand verwendet werden. Von SMALLTALK wurden die umfassende Objektorientierung (es gibt keinen Code außerhalb von Klassen), die Einfachvererbung sowie die Garbage Collection übernommen.