4.4 Blöcke

Wir kommen nun zu einer der wichtigsten Ausprägungen des "Alles-ist-ein-Objekt"-Mottos von SMALLTALK: den Blöcken. Genau wie eine Methode ist ein Block eine abgegrenzte Sequenz oder Folge von Anweisungen. Anders als eine Methode ist ein Block jedoch nicht benannt, kann aber benannt werden, indem er einer Variable zugewiesen wird.

Frage: Was ist ein Block in SMALLTALK?
Antwort: Ein Block in SMALLTALK ist eine abgegrenzte Sequenz oder Folge von Anweisungen. Anders als eine Methode ist ein Block nicht benannt, kann aber einer Variable zugewiesen werden.

Um auszudrücken, dass eine Sequenz von Ausdrücken ein Block ist, wird die Sequenz mit eckigen Klammern markiert. Die Variablen "x" und "y" seien außerhalb des Blocks im Kontext des Blocks deklariert. Der Kontext des Blocks ist die Methode, in der er definiert wurde.
Bei der Ausführung des obigen Blocks wird ein neues Blockobjekt erzeugt. Die Anweisungen, die den Block ausmachen, werden dabei nicht ausgeführt, selbst dann nicht, wenn der Block isoliert steht und ausgeführt wird (das dabei erzeugte Objekt bleibt namenlos und wird von der Speicherbereinigung wieder entfernt).
Um die Anweisungen, die einen Block ausmachen, zur Ausführung zu bringen, muss man ihn auswerten. Dazu schickt man ihm die Nachricht "value". Der Ausdruck "swap value" bewirkt, dass die Variablen "x" und "y" aus dem Kontext des Blocks ihren Wert tauschen. Das Objekt, zu dem "swap value" ausgewertet wird, ist das Objekt, zu dem die letzte Anweisung auswertet. Der Rückgabewert der Methode "value" ist zunächst immer das Objekt, zu dem der letzte Ausdruck eines Blocks auswertet, im obigen Beispiel also das durch "temp" benannte Objekt.

Frage: Wie werden Blöcke in SMALLTALK ausgeführt?
Antwort: Bei der Ausführung des Blockausdrucks wird ein neues Blockobjekt erzeugt.