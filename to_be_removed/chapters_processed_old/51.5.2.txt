51.5.2 Dynamische Komponente

Die Beschreibung der dynamischen Typprüfung in C++ ist knapp: Es gibt keine. Einige Objekte in C++ wissen jedoch zumindest im Prinzip, von welcher Klasse sie eine Instanz sind. Dies liegt daran, dass sie einen Zeiger auf die Sprungtabelle ihrer virtuellen Methoden besitzen. Da diese virtuelle Funktionstabelle für alle Objekte einer Klasse gleich ist, kann sie als eine Art Repräsentation der Klasse angesehen werden. Aus diesem Grund wurde C++ schließlich eine Bibliotheksfunktion hinzugefügt, die es ermöglicht, für Objekte mit dynamisch gebundenen Methoden festzustellen, welcher Klasse sie angehören. Diese Information wird als Runtime Type Information (RTTI) bezeichnet.
Konkret kann RTTI folgendermaßen genutzt werden: Es gibt eine Funktion namens typeid, die auf einer Referenz aufgerufen werden kann. Da diese Funktion auf Klassennamen überladen ist und eine Struktur zurückgibt, auf der == als Gleichheitstest definiert ist, kann der Typ eines Objekts ermittelt werden.
Eine weitere nützliche Funktion, die RTTI verwendet, ist dynamic_cast<T>(x). Diese Funktion nimmt zwei Parameter, einen Typ (T) und ein Objekt (x), und gibt das Objekt mit dem angegebenen Typ zurück, wenn die RTTI dies als korrekt erkennt, andernfalls gibt sie 0 zurück.

Frage: Bietet C++ eine dynamische Typprüfung wie andere Sprachen?
Antwort: Nein, C++ bietet keine eingebaute dynamische Typprüfung.

Frage: Warum wissen einige Objekte in C++, von welcher Klasse sie eine Instanz sind?
Antwort: Einige Objekte in C++ wissen zumindest im Prinzip, von welcher Klasse sie eine Instanz sind, weil sie einen Zeiger auf die Sprungtabelle ihrer virtuellen Methoden besitzen. Diese virtuelle Funktionstabelle dient als eine Art Repräsentation der Klasse.

Frage: Was ist Runtime Type Information (RTTI) in C++?
Antwort: Runtime Type Information (RTTI) ist eine Funktion in C++, die es ermöglicht, für Objekte mit dynamisch gebundenen Methoden festzustellen, welcher Klasse sie angehören. RTTI ermöglicht die Ermittlung des Typs eines Objekts zur Laufzeit.

Frage: Wie kann RTTI in C++ verwendet werden, um den Typ eines Objekts zu ermitteln?
Antwort: RTTI kann verwendet werden, indem die Funktion typeid auf eine Referenz aufgerufen wird. Diese Funktion ist auf Klassennamen überladen und gibt eine Struktur zurück, auf der == als Gleichheitstest definiert ist. Der Typ eines Objekts kann überprüft werden, indem typeid(x) == typeid(T) verwendet wird.

Frage: Was ist die Funktion dynamic_cast in C++?
Antwort: Die Funktion dynamic_cast<T>(x) in C++ nimmt zwei Parameter, einen Typ (T) und ein Objekt (x), und gibt das Objekt mit dem angegebenen Typ zurück, wenn die RTTI dies als korrekt erkennt. Andernfalls gibt sie 0 zurück.

Frage: Wie kann in C++ ohne Verwendung von typeid herausgefunden werden, welcher Klasse Instanzen aller Klassen angehören?
Antwort: Eine Möglichkeit, den Typ einer Klasse in C++ ohne Verwendung von typeid herauszufinden, ist die Verwendung von dynamic_cast. Man kann versuchen, das Objekt auf verschiedene Klassen zu überprüfen, und wenn das Casting erfolgreich ist, gehört das Objekt zu dieser Klasse.